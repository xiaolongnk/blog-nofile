<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>faith技术博客</title>
  <subtitle>我们一起快乐吧...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.nofile.cc/"/>
  <updated>2017-05-08T16:15:04.591Z</updated>
  <id>https://blog.nofile.cc/</id>
  
  <author>
    <name>faith</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql 入门</title>
    <link href="https://blog.nofile.cc/posts/2017/05/08/note-for-mysql-tutor.html"/>
    <id>https://blog.nofile.cc/posts/2017/05/08/note-for-mysql-tutor.html</id>
    <published>2017-05-08T14:58:00.000Z</published>
    <updated>2017-05-08T16:15:04.591Z</updated>
    
    <content type="html"><![CDATA[<h3 id="理论知识"><a href="#理论知识" class="headerlink" title="理论知识"></a>理论知识</h3><h4 id="一、install-mysql-server"><a href="#一、install-mysql-server" class="headerlink" title="一、install mysql-server"></a>一、install mysql-server</h4><ol>
<li>download your mysql-server from this link. <a href="https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-community-5.7.17.0.msi" target="_blank" rel="external">https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-community-5.7.17.0.msi</a></li>
<li>start your mysql-server , connect to your mysql server.</li>
</ol>
<h4 id="二、base-class-for-mysql"><a href="#二、base-class-for-mysql" class="headerlink" title="二、base class for mysql."></a>二、base class for mysql.</h4><ol>
<li>mysql data types  <code>int , bigint , char , varchar , text , float , double , decimal , datetime ， timestamp</code></li>
<li>some keywords ( <code>select</code>,<code>from</code>,<code>where</code>, <code>order by</code>,<code>desc</code>,<code>asc</code>,<code>group by</code>,<code>+</code>,<code>-</code>,<code>*</code>,<code>/</code>,<code>left join</code>,<code>right join</code>,<code>on</code>,<code>in</code>,<code>between</code>, <code>insert</code>,<code>drop</code>, <code>delete</code> ,<code>alter</code>….)</li>
<li><p>show commands;</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">show</span> <span class="keyword">databases</span>; </div><div class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</div><div class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span>;</div><div class="line">desc command;</div></pre></td></tr></table></figure>
</li>
<li><p>create database</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">database</span> yourdatabase ;</div></pre></td></tr></table></figure>
</li>
<li><p>创建数据库。create tables for your database;</p>
</li>
<li>单列插入，批量插入。 insert data for yout tables (single data , batch insert);</li>
<li>删除操作。drop operations; drop data from tables; drop tables ; drop databases;</li>
</ol>
<h4 id="三、mysql-query"><a href="#三、mysql-query" class="headerlink" title="三、mysql query:"></a>三、mysql query:</h4><ol>
<li>single table select ; (select * from table where xxx);</li>
<li>join table select; (select * from a , b where a.xx = b.xx and a.xx = ‘123’ order by a.xx);</li>
<li>left join table select; select * from a left join b on a.x = b.x and a.c = b.c where a.x = ‘xx’ and b.c=’eee’; left join 的原理。</li>
<li>聚合操作： max min avg  having </li>
<li>order by , group by , limit , count;</li>
<li>sub query; select * from A where A.x in (select B.x from b.xxx = ‘1231’ );</li>
<li>if (grade &gt; 70 , ‘low’ , ‘small’);  if(value,t,f);   select id,salary,if(salary&gt;300,’high’,’low’) from salary;</li>
<li>ifnull(t,f)    select id,salary,ifnull(salary,0) from salary;</li>
</ol>
<h4 id="四、mysql中的内置函数"><a href="#四、mysql中的内置函数" class="headerlink" title="四、mysql中的内置函数"></a>四、mysql中的内置函数</h4><ol>
<li>now()</li>
<li>date_add , date_sub();  interval 8 days; select date_add(now() , interval 3 day); select date_sub(now() , interval 1 day); month;</li>
<li>upper , lower , left (name , 3) , right (name , 3);lenght(name) , SubString</li>
<li>CurDate() 返回当前日期</li>
<li>CurTime() 返回当前时间</li>
<li>DateDiff() 计算两个日期之差</li>
<li>Date_Add() 高度灵活的日期运算函数</li>
<li>Date_Format() 返回一个格式化的日期或时间串</li>
<li>Day() 返回一个日期的天数部分</li>
<li>DayOfWeek() 对于一个日期，返回对应的星期几</li>
<li>Hour() 返回一个时间的小时部分</li>
<li>Minute() 返回一个时间的分钟部分</li>
<li>Month() 返回一个日期的月份部分</li>
<li>Now() 返回当前日期和时间</li>
<li>Second() 返回一个时间的秒部分</li>
</ol>
<h3 id="数据库表结构"><a href="#数据库表结构" class="headerlink" title="数据库表结构"></a>数据库表结构</h3><ol>
<li><p>we_student</p>
<pre><code>| Field         | Type        | Null | Key | Default             | Extra          |
---------------|-------------|------|-----|---------------------|----------------
| id            | bigint(20)  | NO   | PRI | NULL                | auto_increment |
| group_id      | bigint(20)  | NO   |     | 0                   |                |
| name          | varchar(64) | NO   |     |                     |                |
| email         | varchar(64) | NO   |     |                     |                |
| gender        | char(1)     | NO   |     | F                   |                |
| address       | varchar(64) | NO   |     |                     |                |
| parents_phone | varchar(32) | NO   |     |                     |                |
| school_grade  | smallint(6) | NO   |     | 1                   |                |
| birthday      | datetime    | NO   |     | 1990-01-01 00:00:00 |                |
| ctime         | datetime    | NO   |     | CURRENT_TIMESTAMP   |                |
| mtime         | datetime    | NO   |     | CURRENT_TIMESTAMP   |                |
| status        | smallint(6) | NO   |     | 1                   |                |
</code></pre></li>
<li><p>we_class</p>
<pre><code>| Field             | Type          | Null | Key | Default           | Extra          |
-------------------|---------------|------|-----|-------------------|----------------|
| id                | bigint(20)    | NO   | PRI | NULL              | auto_increment |
| name              | varchar(64)   | NO   |     |                   |                |
| class_description | varchar(2048) | NO   |     |                   |                |
| price             | int(11)       | NO   |     | 3000              |                |
| price_description | varchar(2048) | NO   |     |                   |                |
| ctime             | datetime      | NO   |     | CURRENT_TIMESTAMP |                |
</code></pre></li>
<li><p>we_group</p>
<pre><code>| Field      | Type        | Null | Key | Default           | Extra          |
------------|-------------|------|-----|-------------------|----------------|
| id         | bigint(20)  | NO   | PRI | NULL              | auto_increment |
| class_id   | smallint(6) | NO   |     | 1                 |                |
| starttime  | datetime    | NO   |     | CURRENT_TIMESTAMP |                |
| endtime    | datetime    | NO   |     | CURRENT_TIMESTAMP |                |
| teacher_id | bigint(20)  | NO   |     | 0                 |                |
| status     | smallint(6) | NO   |     | 0                 |                |
</code></pre></li>
<li><p>we_worker</p>
<pre><code>| Field      | Type        | Null | Key | Default           | Extra          |
------------|-------------|------|-----|-------------------|----------------|
| id         | bigint(20)  | NO   | PRI | NULL              | auto_increment |
| name       | varchar(64) | NO   |     |                   |                |
| sex        | char(1)     | NO   |     | M                 |                |
| mobile     | varchar(32) | NO   |     |                   |                |
| birthday   | datetime    | NO   |     | CURRENT_TIMESTAMP |                |
| card_id    | varchar(32) | NO   |     |                   |                |
| wage       | int(10)     | NO   |     | 0                 |                |
| department | bigint(20)  | NO   |     | 0                 |                |
| in_time    | datetime    | NO   |     | CURRENT_TIMESTAMP |                |
| out_time   | datetime    | NO   |     | CURRENT_TIMESTAMP |                |
| status     | smallint(6) | NO   |     | 1                 |                |
</code></pre></li>
<li><p>we_department</p>
<pre><code>| Field       | Type          | Null | Key | Default           | Extra          |
-------------|---------------|------|-----|-------------------|----------------|
| id          | bigint(20)    | NO   | PRI | NULL              | auto_increment |
| name        | varchar(32)   | NO   |     |                   |                |
| description | varchar(2048) | NO   |     |                   |                |
| ctime       | datetime      | NO   |     | CURRENT_TIMESTAMP |                |
</code></pre></li>
</ol>
<h3 id="创建数据库和数据表"><a href="#创建数据库和数据表" class="headerlink" title="创建数据库和数据表"></a>创建数据库和数据表</h3><ol>
<li><p>创建数据表</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="comment">/**学生表**/</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> we_student (</div><div class="line">  <span class="keyword">id</span> <span class="built_in">bigint</span>(<span class="number">20</span>) auto_increment,</div><div class="line">  <span class="keyword">group_id</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">0</span> <span class="keyword">comment</span> <span class="string">'group_id for the student'</span>,</div><div class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'name of the student'</span>,</div><div class="line">  email <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'email for the student'</span>,</div><div class="line">  sex <span class="built_in">char</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">'F'</span> <span class="keyword">comment</span> <span class="string">'sex of the student'</span>,</div><div class="line">  address <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'address of the student'</span>,</div><div class="line">  parents_phone <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'parents mobile'</span>,</div><div class="line">  school_grade <span class="built_in">smallint</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'1-6 for 初一 ~ 高三'</span>,</div><div class="line">  birthday datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">'1990-01-01 00:00:00'</span>,</div><div class="line">  ctime datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> ,</div><div class="line">  mtime datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> ,</div><div class="line">  <span class="keyword">status</span> <span class="built_in">smallint</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'1:normal , -1: delete'</span>,</div><div class="line">  primary <span class="keyword">key</span> (<span class="keyword">id</span>)</div><div class="line">) <span class="keyword">engine</span> = <span class="keyword">InnoDB</span> , <span class="keyword">charset</span>=utf8 , <span class="keyword">comment</span> <span class="string">'student table'</span> ;</div><div class="line"></div><div class="line"><span class="comment">/**课程表，记录所有的课程**/</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> we_class (</div><div class="line">  <span class="keyword">id</span> <span class="built_in">bigint</span>(<span class="number">20</span>) auto_increment <span class="keyword">comment</span> <span class="string">'class id for this class'</span>,</div><div class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'name for this class.'</span>,</div><div class="line">  class_description <span class="built_in">varchar</span>(<span class="number">2048</span>)  <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'class description'</span>,</div><div class="line">  price <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">3000</span> <span class="keyword">comment</span> <span class="string">'price for this class'</span>,</div><div class="line">  price_description <span class="built_in">varchar</span>(<span class="number">2048</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'description for price'</span>,</div><div class="line">  ctime datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">comment</span> <span class="string">'create time'</span>,</div><div class="line">  primary <span class="keyword">key</span> (<span class="keyword">id</span>)</div><div class="line">) <span class="keyword">engine</span> = <span class="keyword">InnoDB</span> , <span class="keyword">charset</span>=utf8 , <span class="keyword">comment</span> <span class="string">'all class table'</span>;</div><div class="line"></div><div class="line"><span class="comment">/**table for teacher*/</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> we_worker(</div><div class="line">  <span class="keyword">id</span> <span class="built_in">bigint</span>(<span class="number">20</span>) auto_increment <span class="keyword">comment</span> <span class="string">'id for teacher'</span>,</div><div class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'teacher name'</span>,</div><div class="line">  sex <span class="built_in">char</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">'M'</span> <span class="keyword">comment</span> <span class="string">'M for man , female for woman'</span>,</div><div class="line">  mobile <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'mobile'</span>,</div><div class="line">  birthday datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</div><div class="line">  card_id <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'wage card id'</span>,</div><div class="line">  wage <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">0</span> <span class="keyword">comment</span> <span class="string">'wage for the teacher'</span>,</div><div class="line">  department <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">0</span> <span class="keyword">comment</span> <span class="string">'depart id for this worker'</span>,</div><div class="line">  in_time datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span>  <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">comment</span> <span class="string">'入职时间'</span>,</div><div class="line">  out_time datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">comment</span> <span class="string">'离职时间'</span>,</div><div class="line">  <span class="keyword">status</span> <span class="built_in">smallint</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'1: 在职 , -1:离职'</span>,</div><div class="line">  primary <span class="keyword">key</span> (<span class="keyword">id</span>)</div><div class="line">) <span class="keyword">engine</span> = <span class="keyword">InnoDB</span> , <span class="keyword">charset</span>=utf8 , <span class="keyword">comment</span> <span class="string">'table for teacher'</span>;</div><div class="line"></div><div class="line"><span class="comment">/** table for departments **/</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> we_department</div><div class="line">(</div><div class="line">  <span class="keyword">id</span> <span class="built_in">bigint</span>(<span class="number">20</span>) AUTO_INCREMENT <span class="keyword">comment</span> <span class="string">''</span>,</div><div class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'department name'</span>,</div><div class="line">  description <span class="built_in">varchar</span>(<span class="number">2048</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">''</span> <span class="keyword">comment</span> <span class="string">'description for this department'</span>,</div><div class="line">  ctime datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</div><div class="line">  primary <span class="keyword">key</span> (<span class="keyword">id</span>)</div><div class="line">) <span class="keyword">engine</span> = <span class="keyword">InnoDB</span> , <span class="keyword">charset</span> =utf8 , <span class="keyword">comment</span> <span class="string">'table for departments'</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/** table for groups: groups represents students set **/</span></div><div class="line"></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> we_group</div><div class="line">(</div><div class="line">  <span class="keyword">id</span> <span class="built_in">bigint</span>(<span class="number">20</span>) auto_increment <span class="keyword">comment</span> <span class="string">''</span>,</div><div class="line">  class_id <span class="built_in">smallint</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">1</span> <span class="keyword">comment</span> <span class="string">'class id for this group'</span>,</div><div class="line">  starttime datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">comment</span> <span class="string">'start time for this group'</span>,</div><div class="line">  endtime datetime <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span>  <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">comment</span> <span class="string">'end time for this group'</span>,</div><div class="line">  teacher_id <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">0</span> <span class="keyword">comment</span> <span class="string">'worker id'</span>,</div><div class="line">  <span class="keyword">status</span> <span class="built_in">smallint</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="number">0</span> <span class="keyword">comment</span> <span class="string">'0: planning , 1:in process , 2: finished , -1: canceled'</span>,</div><div class="line">  primary <span class="keyword">key</span> (<span class="keyword">id</span>)</div><div class="line">) <span class="keyword">engine</span> = <span class="keyword">InnoDB</span> , <span class="keyword">charset</span> =utf8 , <span class="keyword">comment</span> <span class="string">'table for student groups'</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>插入测试数据</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_worker ( <span class="keyword">name</span> , sex , mobile , birthday , card_id , wage , department , in_time , out_time) <span class="keyword">values</span></div><div class="line">(<span class="string">'欧小龙'</span> , <span class="string">'M'</span> , <span class="string">'18201176525'</span> ,<span class="string">'1990-10-18'</span> , <span class="string">'18201176525'</span> ,  <span class="number">10000</span> , <span class="number">1</span> , <span class="string">'2017-07-13 00:00:00'</span> , <span class="string">'0001-01-01 00:00:00'</span>);</div><div class="line"></div><div class="line"><span class="comment">/* for we_group **/</span></div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_group (class_id , starttime , endtime , teacher_id) <span class="keyword">values</span> (<span class="number">1</span> , <span class="string">'2017-07-14 09:00:00'</span> , <span class="string">'2017-08-14 00:00:00'</span> , <span class="number">1</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_group (class_id , starttime , endtime , teacher_id) <span class="keyword">values</span> (<span class="number">1</span> , <span class="string">'2017-07-14 09:00:00'</span> , <span class="string">'2017-08-14 00:00:00'</span> , <span class="number">1</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_group (class_id , starttime , endtime , teacher_id) <span class="keyword">values</span> (<span class="number">1</span> , <span class="string">'2017-07-14 09:00:00'</span> , <span class="string">'2017-08-14 00:00:00'</span> , <span class="number">1</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_group (class_id , starttime , endtime , teacher_id) <span class="keyword">values</span> (<span class="number">1</span> , <span class="string">'2017-07-14 09:00:00'</span> , <span class="string">'2017-08-14 00:00:00'</span> , <span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_department ( <span class="keyword">name</span> , description ) <span class="keyword">values</span> (<span class="string">'teacher'</span> , <span class="string">'教工部'</span> );</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_department ( <span class="keyword">name</span> , description ) <span class="keyword">values</span> (<span class="string">'adminstration'</span> , <span class="string">'行政部'</span> );</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_department ( <span class="keyword">name</span> , description ) <span class="keyword">values</span> (<span class="string">'finacial'</span> , <span class="string">'财务部'</span> );</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_department ( <span class="keyword">name</span> , description ) <span class="keyword">values</span> (<span class="string">'human resource'</span> , <span class="string">'人力资源'</span> );</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> we_class (<span class="keyword">name</span>  , class_description , price , price_description ) <span class="keyword">values</span> (<span class="string">'c语言入门'</span> , <span class="string">'test '</span> , <span class="number">30</span> , <span class="string">'test'</span>);</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="SQL查询练习-习题"><a href="#SQL查询练习-习题" class="headerlink" title="SQL查询练习 习题"></a>SQL查询练习 习题</h3><ol>
<li><p>数据库操作，查看库和表结构</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="comment">/** show database structure **/</span></div><div class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</div><div class="line"><span class="comment">/** show tables **/</span></div><div class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</div><div class="line"><span class="comment">/** select database **/</span></div><div class="line"><span class="keyword">use</span> learning_sql;</div><div class="line"><span class="comment">/** show table structure **/</span></div><div class="line">desc we_student;</div><div class="line">desc we_department;</div><div class="line">desc we_class;</div><div class="line">desc we_group;</div><div class="line">desc we_worker;</div></pre></td></tr></table></figure>
</li>
<li><p>工资最高的worker，输出姓名和工资，按照工资从小到大排序 <code>select</code> , <code>order by</code> , <code>limit</code></p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> , wage <span class="keyword">from</span> we_worker <span class="keyword">order</span> <span class="keyword">by</span> wage <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">10</span>;  <span class="comment">/**[ offset , size] **/</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> , wage <span class="keyword">from</span> we_worker <span class="keyword">order</span> <span class="keyword">by</span> wage <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">10</span> , <span class="number">10</span>;</div><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> , wage <span class="keyword">from</span> we_worker <span class="keyword">where</span> wage = (<span class="keyword">select</span> <span class="keyword">max</span>(wage) <span class="keyword">from</span> we_worker);</div></pre></td></tr></table></figure>
</li>
<li><p>找出所有的员工的部门名称，输出 老师姓名和部门名称 <code>left join</code></p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> a.name  <span class="keyword">as</span> teacher_name , b.name <span class="keyword">as</span> department_name </div><div class="line">       <span class="keyword">from</span> we_worker <span class="keyword">as</span> a  <span class="keyword">left</span> <span class="keyword">join</span> we_department b <span class="keyword">on</span> a.department = b.id;</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> we_worker a <span class="keyword">left</span> <span class="keyword">join</span> we_department b  <span class="keyword">on</span> a.department = b.id;</div></pre></td></tr></table></figure>
</li>
<li><p>找出每个老师带课的数量 <code>group by</code> , <code>count</code></p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> teacher_id , <span class="keyword">count</span>(*) <span class="keyword">as</span> class_num <span class="keyword">from</span> we_group <span class="keyword">group</span> <span class="keyword">by</span> teacher_id <span class="keyword">order</span> <span class="keyword">by</span> class_num <span class="keyword">desc</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>每个老师的id,工资， 带课数量 <code>left join</code></p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> a.name , a.id , b.class_num </div><div class="line">       <span class="keyword">from</span> we_worker a </div><div class="line">       <span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">           (<span class="keyword">select</span> teacher_id , <span class="keyword">count</span>(*) <span class="keyword">as</span> class_num <span class="keyword">from</span> we_group <span class="keyword">group</span> <span class="keyword">by</span> teacher_id) b </div><div class="line">       <span class="keyword">on</span> a.id = b.teacher_id  <span class="keyword">where</span> a.department = <span class="number">1</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>还没带班级的老师, 以及所有带班的老师 <code>子查询</code>，聚合函数 <code>count</code>，<code>exists</code></p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> we_worker </div><div class="line">        <span class="keyword">where</span> department = <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">id</span> <span class="keyword">not</span> <span class="keyword">in</span> </div><div class="line">            (<span class="keyword">select</span> <span class="keyword">distinct</span> teacher_id <span class="keyword">from</span> we_group);</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> we_worker </div><div class="line">        <span class="keyword">where</span> department = <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">id</span> <span class="keyword">in</span> </div><div class="line">            (<span class="keyword">select</span> <span class="keyword">distinct</span> teacher_id <span class="keyword">from</span> we_group);</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> we_worker </div><div class="line">        <span class="keyword">where</span> department = <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span> </div><div class="line">        (<span class="keyword">select</span> * <span class="keyword">from</span> we_group <span class="keyword">where</span> teacher_id = we_worker.id);</div><div class="line"></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> we_worker </div><div class="line">	<span class="keyword">where</span> department = <span class="number">1</span> </div><div class="line">			<span class="keyword">and</span> <span class="keyword">exists</span> </div><div class="line">			(<span class="keyword">select</span> * <span class="keyword">from</span> we_group <span class="keyword">where</span> teacher_id = we_worker.id);</div></pre></td></tr></table></figure>
</li>
<li><p>mysql 内置函数 <code>date_add</code> and <code>date_sub</code>, 以及数据 <code>update</code></p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">update</span> we_worker <span class="keyword">set</span> in_time=<span class="keyword">date_add</span>(in_time , <span class="built_in">interval</span> <span class="number">2</span> <span class="keyword">day</span>) <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</div><div class="line"><span class="keyword">update</span> we_worker <span class="keyword">set</span> in_time=<span class="keyword">date_sub</span>(in_time , <span class="built_in">interval</span> <span class="number">3</span> <span class="keyword">month</span>) <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">10</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>入职满一年的员工</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> we_worker <span class="keyword">where</span> in_time &lt;= <span class="keyword">date_sub</span>(<span class="keyword">now</span>() , <span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">year</span>) ;</div></pre></td></tr></table></figure>
</li>
<li><p>每个课程的开课数量</p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> class_id , <span class="keyword">count</span>(*) <span class="keyword">as</span> <span class="keyword">count</span> <span class="keyword">from</span> we_group <span class="keyword">group</span> <span class="keyword">by</span> class_id;</div></pre></td></tr></table></figure>
</li>
<li><p>每门课程的 课程id , 开课数量，课程名称</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> a.id , r.total, a.name , a.class_description  </div><div class="line">       <span class="keyword">from</span> we_class <span class="keyword">as</span> a <span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">           (<span class="keyword">select</span> class_id , <span class="keyword">count</span>(*) <span class="keyword">as</span> total <span class="keyword">from</span> we_group <span class="keyword">group</span> <span class="keyword">by</span> class_id) r </div><div class="line">       <span class="keyword">on</span> a.id  = r.class_id;</div><div class="line"></div><div class="line"><span class="keyword">select</span> a.id , r.total, a.name , a.class_description </div><div class="line">       <span class="keyword">from</span> we_class <span class="keyword">as</span> a <span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">       (<span class="keyword">select</span> class_id , <span class="keyword">count</span>(*) <span class="keyword">as</span> total <span class="keyword">from</span> we_group <span class="keyword">group</span> <span class="keyword">by</span> class_id) r </div><div class="line">       <span class="keyword">on</span> a.id  = r.class_id <span class="keyword">where</span> r.total <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>找出还没开班的课程 , 多表 <code>left join</code> , 4 个表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> a.id </div><div class="line">    <span class="keyword">from</span> we_class a </div><div class="line">    <span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">    we_group b </div><div class="line">    <span class="keyword">on</span> a.id = b.class_id </div><div class="line">    <span class="keyword">where</span> b.id <span class="keyword">is</span> <span class="literal">null</span>;</div><div class="line">    </div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> we_class a , we_group b <span class="keyword">where</span> a.id = b.class_id;</div></pre></td></tr></table></figure>
</li>
<li><p>这出一个  学生的姓名,班级开课时间,班级节课时间,课程名称，带课老师名称,下面是输出示例</p>
<pre><code>|name      | starttime           | endtime             | name    | class_description   | teacher_name |
|----------|---------------------|---------------------|---------|---------------------|--------------|
|张一凡    | 2017-07-14 09:00:00 | 2017-08-14 00:00:00 | c语言   | 基本c语言语法       | 000          |
|王鑫      | 2017-07-14 09:00:00 | 2017-08-14 00:00:00 | c语言   | 基本c语言语法       | 000          |
</code></pre><figure class="highlight sql"><table><tr><td class="code"><pre><div class="line"><span class="keyword">select</span> a.name , b.id <span class="keyword">as</span> <span class="keyword">group_id</span>  , c.name, c.class_description , d.name  </div><div class="line">    <span class="keyword">from</span> we_student a </div><div class="line">    <span class="keyword">left</span> <span class="keyword">join</span> we_group b <span class="keyword">on</span> a.group_id = b.id </div><div class="line">    <span class="keyword">left</span> <span class="keyword">join</span> we_class c <span class="keyword">on</span> b.class_id = c.id </div><div class="line">    <span class="keyword">left</span> <span class="keyword">join</span> we_worker d <span class="keyword">on</span> b.teacher_id = d.id;</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;理论知识&quot;&gt;&lt;a href=&quot;#理论知识&quot; class=&quot;headerlink&quot; title=&quot;理论知识&quot;&gt;&lt;/a&gt;理论知识&lt;/h3&gt;&lt;h4 id=&quot;一、install-mysql-server&quot;&gt;&lt;a href=&quot;#一、install-mysql-server&quot;
    
    </summary>
    
    
      <category term="mysql" scheme="https://blog.nofile.cc/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>npm update npm</title>
    <link href="https://blog.nofile.cc/posts/2017/03/06/note-node.html"/>
    <id>https://blog.nofile.cc/posts/2017/03/06/note-node.html</id>
    <published>2017-03-06T15:35:00.000Z</published>
    <updated>2017-05-08T15:38:24.644Z</updated>
    
    <content type="html"><![CDATA[<h4 id="update-npm-with-npm"><a href="#update-npm-with-npm" class="headerlink" title="update npm with npm"></a>update npm with npm</h4><p>update npm it’s self is simple , just use this command.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm update -g npm</div></pre></td></tr></table></figure>
<p>please wait for a while , it may take several minutes.</p>
<p>#### </p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;update-npm-with-npm&quot;&gt;&lt;a href=&quot;#update-npm-with-npm&quot; class=&quot;headerlink&quot; title=&quot;update npm with npm&quot;&gt;&lt;/a&gt;update npm with npm&lt;/h4&gt;&lt;p&gt;up
    
    </summary>
    
    
      <category term="tags" scheme="https://blog.nofile.cc/tags/tags/"/>
    
      <category term="node" scheme="https://blog.nofile.cc/tags/node/"/>
    
      <category term="npm" scheme="https://blog.nofile.cc/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>shell while loop break</title>
    <link href="https://blog.nofile.cc/posts/2016/12/03/note-sh-01.html"/>
    <id>https://blog.nofile.cc/posts/2016/12/03/note-sh-01.html</id>
    <published>2016-12-03T08:47:00.000Z</published>
    <updated>2017-05-08T15:38:17.454Z</updated>
    
    <content type="html"><![CDATA[<h4 id="shell-while-and-break"><a href="#shell-while-and-break" class="headerlink" title="shell while and break"></a>shell while and break</h4><p>shell 中的while 循环，也可以和break关键字配合使用，和其他程序语言类似。大体是一个<code>do...done</code>的格式。<br>本文是一个简单的shell while的程序，可以用来检查你的程序是不是还活着。 包括一些简单的算术运算，在实际变成中比较常用。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line">checkstr=&apos;redis&apos;</div><div class="line">num=1</div><div class="line">factor=5</div><div class="line">lifetime=1</div><div class="line">while :</div><div class="line">do</div><div class="line">    cnt=`ps aux | grep $checkstr | grep -v grep | wc -l`</div><div class="line">    if [ $cnt&apos;0&apos; -lt 1&apos;0&apos; ]</div><div class="line">    then</div><div class="line">        echo &apos;die&apos;</div><div class="line">        break</div><div class="line">    fi</div><div class="line">    #sleep 5 seconds</div><div class="line">    ((time=$lifetime*$factor))</div><div class="line">    echo &quot;live time [ &quot;$time&quot; ] seconds&quot;</div><div class="line">    #this is another method for math operator</div><div class="line">    lifetime=$((lifetime+1))</div><div class="line">    sleep 5</div><div class="line">done</div></pre></td></tr></table></figure>
<p>运行结果如下</p>
<p><img src="https://img.nofile.cc/images/2016/12/03/14807576040945.png" style="width:500px"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;shell-while-and-break&quot;&gt;&lt;a href=&quot;#shell-while-and-break&quot; class=&quot;headerlink&quot; title=&quot;shell while and break&quot;&gt;&lt;/a&gt;shell while and break&lt;/
    
    </summary>
    
    
      <category term="linux" scheme="https://blog.nofile.cc/tags/linux/"/>
    
      <category term="shell" scheme="https://blog.nofile.cc/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>多说插件支持站点https</title>
    <link href="https://blog.nofile.cc/posts/2016/11/26/note-duoshuo-https.html"/>
    <id>https://blog.nofile.cc/posts/2016/11/26/note-duoshuo-https.html</id>
    <published>2016-11-26T09:28:00.000Z</published>
    <updated>2017-05-08T15:38:05.270Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>hexo 集成多说插件之后，对站点做了https 。https之后，要求页面里所有的引用资源都是htts协议的。但是多说的的官方js中的第三<br>三方平台的头像没有做https，现在多说官方貌似没怎么维护了，去论坛逛了几圈，有人提问，但是官方没有回应。<br>大概2个月前做了https改造的时候就发现这个问题了，当时没找到解决方案。当时简单尝试了一下，没有成功，加上我的blog也没设么<br>评论，于是就放弃了。</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>今天浏览我的<a href="https://blog.nofile.cc/posts/2016/10/11/note-linux.html">这篇文章</a><br>发现竟然有一个评论，并且另外一篇文章也有。然后感觉没有那个绿色的锁很不舒服，于是再次长草了。<br>打开浏览器，再次分析了下这个页面。发现页面中加载了多说的一个js ，embed.js，warning直接告诉我，是这个js有问题。<br>查看站点请求的网络资源，发现相关的还有一个http接口。<br><img src="https://img.nofile.cc/images/2016/12/03/14807622255019.png" style="width:600px"> </p>
<p>embed.js 是压缩过的，整个页面只有2行，根本没法看，也没法调试。所以，先想办法将这个js替换掉，用一个格式化好的替换掉<br>之后，可以给调试带来很多方便。</p>
<p>利用<code>工具1</code>我们可以将embed.js 处理一下，基本上可以看了。虽然变量被换成没意义的了，但是并不是太影响。<br>处理之后的代码大概就是我们<a href="https://github.com/xiaolongnk/duoshuo-js-http-patch/blob/master/embed-https.js" target="_blank" rel="external">src</a>中的样子。<br>这个代码读起来会方便很多。先看了下这个代码，看了一会也没太看明白。于是再次回到console中。</p>
<p>从这个接口出发，在embed.js 中可以找到一些信息。用我们的格式化的js替换官方js。刷新页面，发现功能没有变化，说明替换js并<br>不会影响功能。继续在浏览器中调试。这次可以试下浏览器的断点功能，在embed.js 中打一个断点。要在报出warning之前。<br>然后单步调试，很快发现了浏览器出现warning的位置，发现这个之后，可以加一个更精确的断点。经过几次观察之后，我们可以定位到这个内容<br><img src="https://img.nofile.cc/images/2016/12/03/14807622396074.png" style="width:600px"></p>
<p>在前面，js从api接口中获取到了数据，但是数据里面的图像是http的，而不是https的，我们猜想可以把里面的http强行换成https以了。按照我们的想法，在server上修改一下，并且加上log，发现还是不行，但是warning 变少了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">n.replace(&apos;http:&apos;,&apos;https:&apos;)</div></pre></td></tr></table></figure>
<p>后面发现，原来javascript的replace就是只替换一个。于是找了replaceall的方法。<br>用chrome的debug的过程如下。<br><img src="https://img.nofile.cc/images/2016/12/03/14807628131313.png" alt="chrome debug"><br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">n.replace(/http:/g , &apos;https&apos;);</div></pre></td></tr></table></figure></p>
<p>刷新页面，发现页面上的所有数据都变成了https 的了，锁变绿了，开心。</p>
<p><a href="https://blog.nofile.cc/posts/2016/08/19/note-https.html">https站点</a><br>的方法，可以参考我之前的blog.</p>
<h3 id="Github-repo"><a href="#Github-repo" class="headerlink" title="Github repo"></a>Github repo</h3><p>最终修改后的结果在我的<a href="https://github.com/xiaolongnk/duoshuo-js-http-patch" target="_blank" rel="external">xiaolongnk</a>上.<br>喜欢的可以star一下我。</p>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><ol>
<li><a href="http://jsbeautifier.org/" target="_blank" rel="external">javascript beautifer</a></li>
<li>chrome 单步调试</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt;hexo 集成多说插件之后，对站点做了https 。https之后，要求页面里所有的引用资源都是htts协议的。但是多说的的官方js中的第三
    
    </summary>
    
    
      <category term="https" scheme="https://blog.nofile.cc/tags/https/"/>
    
      <category term="多说" scheme="https://blog.nofile.cc/tags/%E5%A4%9A%E8%AF%B4/"/>
    
      <category term="javascript" scheme="https://blog.nofile.cc/tags/javascript/"/>
    
      <category term="web" scheme="https://blog.nofile.cc/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>tcp简介</title>
    <link href="https://blog.nofile.cc/posts/2016/10/18/note-tcp.html"/>
    <id>https://blog.nofile.cc/posts/2016/10/18/note-tcp.html</id>
    <published>2016-10-18T07:21:00.000Z</published>
    <updated>2017-05-08T15:38:10.332Z</updated>
    
    <content type="html"><![CDATA[<h4 id="tcp简介"><a href="#tcp简介" class="headerlink" title="tcp简介"></a>tcp简介</h4><p>TCP协议在不可靠的传输基础上实现了可靠的传输方案。一个tcp连接其实不是一个连接，它也是一个断断续续传输数据的过程，只不过给我们的感觉是有一个连接。要解决可靠传输和数据乱序的问题。</p>
<ol>
<li><p>计算机网络四层模型</p>
<ol>
<li>应用层(DNS , FTP , SMTP ,HTTP , SSH , TELNET)。</li>
<li>运输层(tcp,udp)。</li>
<li>网络层(ip,rip,icmp),路由器，rip协议，路由选择算法。ip地址，子网掩码。</li>
<li>链路层(arp , rarp)设备驱动程序,以太网协议，以太网,光纤。</li>
</ol>
</li>
<li><p>tcp 协议。</p>
<ol>
<li>tcp数据报头格式。ack , syn , window , src-port , dest-port.</li>
<li>tcp三次握手，建立链接</li>
<li>断开链接</li>
</ol>
</li>
<li><p>tcp 的可靠传输的实现原理。</p>
<ol>
<li>数据重传机制,数据重传策略。(ACK , SYN , FIN)(SACK selective Acknowledgment)，需要在tcp头部加入新的字段，sack，sack和ack不一样,sack 的含义是，汇报收到的数据碎片,这个协议要求两边都支持sack,linux 下可以通过tcp_sack 来打开这个功能，linux2.4以后默认打开的。超时重传，接收端给发送端的ack确认只会确认最后一个连续的包。快速重传机制。D-SACK(duplicate).</li>
<li>数据校验，checksum。</li>
<li>tcp 的 rtt(round trip time) 算法， 超时时间。超时时间是根据网络情况，动态变化的。设长了，重发就慢，丢了老半天才重发，没有效率，性能差；设短了，会导致可能并没有丢就重发。于是重发的就快，会增加网络拥塞，导致更多的超时，更多的超时导致更多的重发。所以这个的选择算法也很是重要。</li>
</ol>
</li>
<li><p>tcp拥塞控制和流量控制</p>
<ol>
<li>tcp 的滑动窗口。tcp 需要知道实际的网络数据处理带宽或是数据处理速度，这样才不会引起网络拥塞，导致丢包。这个window的作用是告诉发送端自己还有多少缓冲区可以用来接收数据,而不会导致接收端处理不过来。所以tcp会根据这个接收方的window来判断接收方可以接受多少数据，不会发送太多的数据，send window 一般是20个字节。滑动窗口一般会被分成4部分，@1已收到ack确认的数据@2已经发送但是还没有收到ack的数据@3在窗口中还没有发出的@4窗口以外的数据。工作过程是，接收端通过窗口滑动机制来控制发送端。发送方的window size 是由接收方告知的。</li>
<li>zero window 客户端的window会被server端给降成0，接收方有了window size之后会通过zwp包来通知发送。</li>
</ol>
</li>
</ol>
<h4 id="一些关键词"><a href="#一些关键词" class="headerlink" title="一些关键词"></a>一些关键词</h4><p>MTU 总共是1500字节。<br>TCP 头部的内容大概是40个字节，出去头部，一个tcp可以运输的内容大概是1460字节的内容。这就是MSS(max segment size)。<br>window size<br>sliding window </p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;tcp简介&quot;&gt;&lt;a href=&quot;#tcp简介&quot; class=&quot;headerlink&quot; title=&quot;tcp简介&quot;&gt;&lt;/a&gt;tcp简介&lt;/h4&gt;&lt;p&gt;TCP协议在不可靠的传输基础上实现了可靠的传输方案。一个tcp连接其实不是一个连接，它也是一个断断续续传输数据的过程
    
    </summary>
    
    
      <category term="tcp" scheme="https://blog.nofile.cc/tags/tcp/"/>
    
      <category term="network" scheme="https://blog.nofile.cc/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>tmux -- 终端复用</title>
    <link href="https://blog.nofile.cc/posts/2016/10/11/note-tmux.html"/>
    <id>https://blog.nofile.cc/posts/2016/10/11/note-tmux.html</id>
    <published>2016-10-11T02:18:00.000Z</published>
    <updated>2017-05-08T15:38:02.849Z</updated>
    
    <content type="html"><![CDATA[<h4 id="tmux-简介"><a href="#tmux-简介" class="headerlink" title="tmux 简介"></a>tmux 简介</h4><p>这里简单介绍一下<a href="https://github.com/tmux/tmux" target="_blank" rel="external">tmux</a>。<br>tmux 是一个终端复用软件，类似的软甲有screen。但是现在的screen 用的人已经越来越少了。<br>慢慢得会被tmux一统江湖。先不多说了，看一张效果图吧。</p>
<p><img src="https://img.nofile.cc/images/2016/12/25/14826321686494.png" alt="tmux 效果1"><br><img src="https://img.nofile.cc/images/2016/12/25/14826334955905.png" alt="tmux 效果2"></p>
<p>有时候，我们需要开多个terminal，大部分情况下，我们可以通过多个tab来完成。但是在我们<br>不需要全屏展示的时候，这样感觉浪费。比如说我们需要一边写代码，一边看log，一边调试<br>代码。这个时候，用多个tab的方式，效率就比较低了。有tmux之后，我们就可以都在一个terminal<br>中完成这个操作了。</p>
<p>除了，终端分屏的功能，tmux还可以帮我们保存我们的工作session。我们在一个session中打开的tab<br>都会被保存下来，我们可以中断当前的工作，去做其他的事情，在我们回来之后，我们还可以直接恢复<br>我们原来的工作环境。所有打开的窗口会再次出现，就算关了terminal也没有关系。</p>
<p>并且现在有了<a href="https://github.com/tmux-plugins/tmux-resurrect" target="_blank" rel="external">session恢复插件</a>之后，就<br>算server重启了也没有关系了，我们的session依然可以恢复。</p>
<p>tmux可以支持鼠标了，不过这个功能要求tmux的version&gt;2.2 。如果比较就的系统，会给你配备1.6的tmux。<br>这个时候，可能需要你自己编译一个tmux啦，具体的方法，可以参考前面那个tmux的链接啦。</p>
<p>总之，linux的软件，未经配置的是一个，配置好的是另一个，当然我说的易用性。tmux同样也有很强的定制<br>性，具体的配置，可以参考我下面的配置。里面有一些简单的解释，不过不那么全。如果你很感兴趣，那么<br>可以对其中自己不太明白的地方，自己搜索下,应该能获得很多新知识,可以帮助你更好的使用tmux。</p>
<p>如果你希望了解更多的tmux插件，你可以参考这个<a href="https://github.com/tmux-plugins/tpm" target="_blank" rel="external">tpm</a></p>
<h4 id="tmux-配置"><a href="#tmux-配置" class="headerlink" title="tmux 配置"></a>tmux 配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><div class="line"><span class="built_in">set</span> -g prefix ^q</div><div class="line">unbind ^b  </div><div class="line"><span class="built_in">bind</span> a send-prefix  </div><div class="line">unbind <span class="string">'"'</span>  </div><div class="line"><span class="built_in">bind</span> - splitw -v  </div><div class="line">unbind %  </div><div class="line"><span class="built_in">bind</span> \ splitw -h  </div><div class="line"><span class="built_in">bind</span> r <span class="built_in">source</span>-file ~/.tmux.conf \; display <span class="string">"Reloaded!"</span>  </div><div class="line"></div><div class="line">unbind C-[  </div><div class="line">unbind C-]  </div><div class="line"><span class="built_in">bind</span> C-n new-session   </div><div class="line"><span class="built_in">bind</span> Tab last-window</div><div class="line"></div><div class="line"><span class="comment">#set status-interval 1</span></div><div class="line"><span class="built_in">set</span>-option -g status on  </div><div class="line"><span class="built_in">set</span>-option -g status-interval 1  </div><div class="line"><span class="built_in">set</span>-option -g status-justify <span class="string">"left"</span>  </div><div class="line"><span class="built_in">set</span>-option -g status-left-length 60  </div><div class="line"><span class="built_in">set</span>-option -g status-right-length 90  </div><div class="line"><span class="built_in">set</span>-option -g  mouse on</div><div class="line"></div><div class="line"><span class="comment">#选择分割的窗格</span></div><div class="line"><span class="built_in">bind</span> k selectp -U <span class="comment">#选择上窗格</span></div><div class="line"><span class="built_in">bind</span> j selectp -D <span class="comment">#选择下窗格</span></div><div class="line"><span class="built_in">bind</span> h selectp -L <span class="comment">#选择左窗格</span></div><div class="line"><span class="built_in">bind</span> l selectp -R <span class="comment">#选择右窗格</span></div><div class="line"><span class="comment">#----------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment">#重新调整窗格的大小</span></div><div class="line"><span class="built_in">bind</span> ^k resizep -U 10</div><div class="line"><span class="built_in">bind</span> ^j resizep -D 10</div><div class="line"><span class="built_in">bind</span> ^h resizep -L 10</div><div class="line"><span class="built_in">bind</span> ^l resizep -R 10</div><div class="line"><span class="built_in">bind</span> ^u swapp -U</div><div class="line"><span class="built_in">bind</span> ^d swapp -D</div><div class="line"><span class="comment">#----------------------------------------------</span></div><div class="line"></div><div class="line"><span class="comment"># 颜色</span></div><div class="line"><span class="built_in">set</span> -g status-fg white</div><div class="line"><span class="built_in">set</span> -g status-bg cyan</div><div class="line"><span class="comment">#设置终端颜色为256色  </span></div><div class="line"><span class="built_in">set</span> -g default-terminal <span class="string">"screen-256color"</span></div><div class="line"><span class="comment"># Use vim keybindings in copy mode</span></div><div class="line">setw -g mode-keys vi</div><div class="line"><span class="comment"># 对齐方式</span></div><div class="line"><span class="built_in">set</span>-option -g status-justify centre</div><div class="line"></div><div class="line"><span class="comment"># 左下角</span></div><div class="line"><span class="comment"># set-option -g status-left '#[bg=black,fg=green][#[fg=blue]#S#[fg=green]]'</span></div><div class="line"><span class="built_in">set</span>-option -g status-left-length 20</div><div class="line"><span class="built_in">set</span>-option -g allow-rename off</div><div class="line"><span class="comment"># 窗口列表</span></div><div class="line">setw -g automatic-rename on</div><div class="line"><span class="built_in">set</span>-window-option -g window-status-format <span class="string">'#[fg=yellow,bold]#I:#W#[fg=blue,dim]'</span></div><div class="line"><span class="built_in">set</span>-window-option -g window-status-current-format <span class="string">'#[fg=green,bold][#[fg=blue]#I#[fg=blue]:#[fg=blue]#W#[fg=dim]#[fg=green,bold]]'</span></div><div class="line"><span class="comment"># 右下角</span></div><div class="line"><span class="built_in">set</span> -g status-right <span class="string">'#[fg=green,bold][#[fg=yellow,bold]%Y-%m-%d %H:%M:%S#[fg=green]]'</span></div><div class="line"></div><div class="line"><span class="comment"># just for mac settings. install reattach-to-user-namespace first.</span></div><div class="line"><span class="comment"># Copy-paste integration  </span></div><div class="line"><span class="built_in">set</span>-option -g default-command <span class="string">"reattach-to-user-namespace -l zsh"</span></div><div class="line"><span class="comment"># Setup 'v' to begin selection as in Vim</span></div><div class="line"><span class="built_in">bind</span>-key -t vi-copy v begin-selection</div><div class="line"><span class="built_in">bind</span>-key -t vi-copy y copy-pipe <span class="string">"reattach-to-user-namespace pbcopy"</span></div><div class="line"><span class="comment"># Update default binding of `Enter` to also use copy-pipe</span></div><div class="line">unbind -t vi-copy Enter</div><div class="line"><span class="built_in">bind</span>-key -t vi-copy Enter copy-pipe <span class="string">"reattach-to-user-namespace pbcopy"</span></div><div class="line"><span class="comment"># Bind ']' to use pbpaste</span></div><div class="line"><span class="built_in">bind</span> ] run <span class="string">"reattach-to-user-namespace pbpaste | tmux load-buffer - &amp;&amp; tmux paste-buffer"</span></div><div class="line"></div><div class="line"><span class="comment"># List of plugins</span></div><div class="line"><span class="built_in">set</span> -g @plugin <span class="string">'tmux-plugins/tpm'</span></div><div class="line"><span class="built_in">set</span> -g @plugin <span class="string">'tmux-plugins/tmux-sensible'</span></div><div class="line"><span class="built_in">set</span> -g @plugin <span class="string">'nhdaly/tmux-better-mouse-mode'</span></div><div class="line"><span class="built_in">set</span> -g @plugin <span class="string">'tmux-plugins/tmux-yank'</span></div><div class="line"><span class="built_in">set</span> -g @plugin <span class="string">'tmux-plugins/tmux-resurrect'</span></div><div class="line"><span class="built_in">set</span> -g @plugin <span class="string">'tmux-plugins/tmux-continuum'</span></div><div class="line"><span class="built_in">set</span> -g @plugin <span class="string">'tmux-plugins/tmux-sidebar'</span></div><div class="line"><span class="built_in">set</span> -g @plugin <span class="string">'tmux-plugins/tmux-copycat'</span></div><div class="line"></div><div class="line"><span class="comment"># for vim</span></div><div class="line"><span class="built_in">set</span> -g @resurrect-strategy-vim <span class="string">'session'</span></div><div class="line"><span class="comment"># for neovim</span></div><div class="line"><span class="built_in">set</span> -g @resurrect-strategy-nvim <span class="string">'session'</span></div><div class="line">run <span class="string">'~/.tmux/plugins/tpm/tpm'</span></div></pre></td></tr></table></figure>
<p>完整的配置文件在这里<a href="https://raw.githubusercontent.com/xiaolongnk/tmux-conf/master/tmux.conf" target="_blank" rel="external">tmux-conf</a>.<br>我的github-tmux-conf <a href="https://github.com/xiaolongnk/tmux-conf" target="_blank" rel="external">tmux-conf</a></p>
<h4 id="配置文件依赖"><a href="#配置文件依赖" class="headerlink" title="配置文件依赖"></a>配置文件依赖</h4><ol>
<li>tmux-version <code>&gt;</code> 1.9</li>
<li>mac 下需要reattach-to-user-namespace <code>brew install reattatch-to-user-namespae</code></li>
</ol>
<h4 id="tmux-快捷键"><a href="#tmux-快捷键" class="headerlink" title="tmux 快捷键"></a>tmux 快捷键</h4><p><code>ctrl + q</code>  是 <code>prefix</code><br><code>prefix + c</code> 创建新窗口<br><code>prefix + ,</code> 窗口重命名<br><code>prefix + n</code> 下一个窗口<br><code>prefix + ctrl + n</code> 开启一个新session<br><code>prefix + tab</code>  切换到上次工作的窗口<br><code>prefix + d</code>  detach current tmux session ， 可以用<code>tmux a</code>命令重新恢复</p>
<h4 id="tmux-常见问题"><a href="#tmux-常见问题" class="headerlink" title="tmux 常见问题"></a>tmux 常见问题</h4><ol>
<li><p>tmux title 经常改变</p>
<p> 这个问题我是从stackoverflow上找到的，<br> <a href="http://stackoverflow.com/questions/17289439/tmux-window-title-keeps-renaming" target="_blank" rel="external">原问题在这里</a>,解决<br> 方案是在tmux.conf中添加如下配置 <code>set-option -g allow-rename off</code><br> 当然，这个已经包含在我的配置文件里面了。</p>
</li>
<li><p>tmux 中 将vim中内容复制到系统剪切板。</p>
<p> 还有就是tmux 中使用vim复制到系统clipboard中的问题。一般情况下，只有mac下好像才会有这个问题。<br> 对应的修复方案也写在配置文件里了。如果是mac系统，直接用这个配置文件应该就可以了，另外需要自己<br> 安装下依赖。</p>
</li>
</ol>
<h4 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h4><p>tmux 的包含session，session中可以有好多标签。<br>有不少快捷键。刚开始记起来可能有点费尽，感觉有点像vim的学习过程。刚开始可能有点困难，但是一旦你适应了，<br>对它足够了解了，的确会方便很多。<br>加油吧。有问题欢迎发我邮箱，随时交流。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;tmux-简介&quot;&gt;&lt;a href=&quot;#tmux-简介&quot; class=&quot;headerlink&quot; title=&quot;tmux 简介&quot;&gt;&lt;/a&gt;tmux 简介&lt;/h4&gt;&lt;p&gt;这里简单介绍一下&lt;a href=&quot;https://github.com/tmux/tmux&quot; tar
    
    </summary>
    
    
      <category term="linux" scheme="https://blog.nofile.cc/tags/linux/"/>
    
      <category term="tmux" scheme="https://blog.nofile.cc/tags/tmux/"/>
    
  </entry>
  
  <entry>
    <title>PHP编译安装</title>
    <link href="https://blog.nofile.cc/posts/2016/10/11/note-phpcompileinstall.html"/>
    <id>https://blog.nofile.cc/posts/2016/10/11/note-phpcompileinstall.html</id>
    <published>2016-10-11T02:18:00.000Z</published>
    <updated>2017-05-08T15:38:23.456Z</updated>
    
    <content type="html"><![CDATA[<h4 id="php-编译"><a href="#php-编译" class="headerlink" title="php 编译"></a>php 编译</h4><ol>
<li>下载php源码</li>
<li>安装一些以来的库，如果这些库缺失的话，configure 会失败。也可以失败一次安装一个。这类问题的解决方案相对简单，在linux上用apt-get 安装对应的库就可以了。不行的话，用搜索引擎找一下就会有大片的解决方案，随便一个都可以拿来参考。<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get install libcurl4-openssl-dev</div><div class="line">sudo apt-get install libssl-dev</div><div class="line">sudo apt-get install libxml2-dev</div><div class="line"></div><div class="line">./configure --prefix=/yourpath/php --with-config-file-path=/yourpath/php/etc --with-mysql=/usr/ --with-iconv-dir=/usr/ --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --with-curl --with-mcrypt --with-gd --with-openssl --with-mhash --with-xmlrpc --with-zlib --with-pdo-mysql --with-mysql=shared,mysqlnd --enable-xml --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --enable-mbregex --enable-fpm --enable-mbstring --enable-gd-native-ttf --enable-pcntl --enable-sockets --enable-zip --enable-pdo --disable-rpath</div></pre></td></tr></table></figure>
</li>
</ol>
<p>配置中我们开启了好多功能，有好多我们都不知道是干什么的，没关系，好奇的同学们可以先<code>./configure --help</code>来了解下，这个问题先留着，后面有空了我们开专题专门堂研究下这个问题。</p>
<ol>
<li>可能会遇到的问题。<ol>
<li>openssl.h not found</li>
<li>libxml2 没有安装</li>
<li>jpeglib.h not found</li>
<li>pnglib.h not found</li>
<li>freetype-config not found</li>
<li>mcrypt.h not found</li>
</ol>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get install libxml2-dev</div><div class="line">sudo apt-get install pkg-config</div><div class="line">sudo apt-get install libssl-dev libsslcommon2-dev</div><div class="line">sudo apt-get install libjpeg-dev</div><div class="line">sudo apt-get install libpng++-dev</div><div class="line">sudo apt-get install libfreetype6-dev</div><div class="line">sudo apt-get install libmcrypt-dev</div></pre></td></tr></table></figure>
<ol>
<li>make -j4  <code>-j4</code> 这个参数不是必须的，如果你的电脑是4核的，这样会加快编译速度。</li>
</ol>
<h4 id="php-扩展安装"><a href="#php-扩展安装" class="headerlink" title="php 扩展安装"></a>php 扩展安装</h4><ol>
<li>下载php扩展，比如phpredis ，可以直接来这里找<a href="https://pecl.php.net/" target="_blank" rel="external">https://pecl.php.net/</a></li>
<li><p>进入php扩展目录，操作如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">/your/path/phpize </div><div class="line">./configure </div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
</li>
<li><p>如果按照上面的方法安装扩展的时候还是会失败，那么可以换一个版本的扩展再试下。</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;php-编译&quot;&gt;&lt;a href=&quot;#php-编译&quot; class=&quot;headerlink&quot; title=&quot;php 编译&quot;&gt;&lt;/a&gt;php 编译&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;下载php源码&lt;/li&gt;
&lt;li&gt;安装一些以来的库，如果这些库缺失的话，configure 会失
    
    </summary>
    
    
      <category term="linux" scheme="https://blog.nofile.cc/tags/linux/"/>
    
      <category term="php" scheme="https://blog.nofile.cc/tags/php/"/>
    
      <category term="php-extension" scheme="https://blog.nofile.cc/tags/php-extension/"/>
    
  </entry>
  
  <entry>
    <title>linux 标准开发环境</title>
    <link href="https://blog.nofile.cc/posts/2016/10/11/note-linux.html"/>
    <id>https://blog.nofile.cc/posts/2016/10/11/note-linux.html</id>
    <published>2016-10-11T02:18:00.000Z</published>
    <updated>2017-05-08T15:38:06.750Z</updated>
    
    <content type="html"><![CDATA[<p>在我们拿到一个刚被初始化的server之后，我们需要做一些配置工作，才能让这台server变成适合我们的工作机，一般来说，我通常会做下面这些准备工作。</p>
<h4 id="配置zsh"><a href="#配置zsh" class="headerlink" title="配置zsh"></a>配置zsh</h4><p>大部分学习linux的刚接触的基本都是bash，我之前也是，最近了解了zsh之后，发现zsh确实很强大，好多地方都很人性化，所以这里也推荐大家尝试一下，不喜欢的话可以再滚回bash。<br>简单介绍一下zsh的优点：</p>
<ol>
<li>强大的补全功能</li>
<li>git命令的完美支持</li>
<li>autojump 可以迅速切换目录，支持模糊匹配，比我之前了解的前缀匹配强多了<br>上面这三点以前用bash的时候我都是自己在配置问价里面，集成了一些插件搞出来的，现在zsh里面都是现成的了。</li>
</ol>
<p>zsh 和 oh-my-zsh 相关文章已经很多了，我也是参考了他们的文章开始的。 <a href="https://zhuanlan.zhihu.com/p/19556676" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/19556676</a> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get install zsh</div><div class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</div><div class="line">chsh $USER -s $(which zsh)  #将系统的bash换成zsh</div><div class="line">wget https://github.com/downloads/joelthelion/autojump/autojump_v21.1.2.tar.gz</div><div class="line">tar -zxvf autojump_v21.1.2.tar.gz</div><div class="line">cd autojump</div><div class="line">./install.sh</div><div class="line"></div><div class="line">plugins=(git autojump)</div><div class="line">[[ -s ~/.autojump/etc/profile.d/autojump.zsh ]] &amp;&amp; . ~/.autojump/etc/profile.d/autojump.zsh</div></pre></td></tr></table></figure>
<p><code>./install.sh</code>安装完之后，会提示我们将<code>[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; . ~/.autojump/etc/profile.d/autojump.sh</code>这一行加入到我们的.zshrc里面，写的位置需要注意一下，一定要放在.zshrc中<code>source $ZSH/oh-my-zsh.sh</code>这一行的前面。否则会出现需要执行2此source ~/.zshrc 才会生效的现象。</p>
<p>zsh 的插件，默认会装git，我这里装了autojump。<br>配置过程中，遇到了任何问题，请参考上面那个链接。</p>
<h4 id="基本的配置"><a href="#基本的配置" class="headerlink" title="基本的配置"></a>基本的配置</h4><ol>
<li>vim，基本的编辑器，对我来说，只会用vim，nano都不怎么会，emacs更是不用提。vim的初始化，这里有一套比较成熟的配置文件，可以比较方便的搞定，一般情况，可以将一些个人习惯的配置脚本化，我就这样做了，基本软件的安装可以用脚本很方便的完成。需要配置常用的扩展，并配置正确的vimrc。可以参考我的那篇vim的文章。</li>
<li>git 需要搞定~/.gitconfig</li>
<li>openssh-server 默认情况下，需要安装这个，才可以远程ssh连接。</li>
<li>ag 一个更强大的grep，类似的还有ack<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get install vim-gtk</div><div class="line">sudo apt-get install git tig</div><div class="line">sudo apt-get install openssh-server</div><div class="line">sudo apt-get install silversearcher-ag</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="标准的web环境"><a href="#标准的web环境" class="headerlink" title="标准的web环境"></a>标准的web环境</h4><p>通常来说，一套相对简单的web开发环境，服务器软件到，php，再到存储层，包括需要以下这些组件的支持。</p>
<ol>
<li>nginx  编译安装，参考编译nginx的文章</li>
<li>php    编译安装，参考编译php的文章</li>
<li>php扩展 (redis , memcached , imagic , gmagic) 编译安装</li>
<li>mysql  (可靠存储)</li>
<li>redis  (缓存)</li>
<li>memcached  (缓存)</li>
</ol>
<p>安装命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get install mysql-server</div><div class="line">sudo apt-get install redis-server</div><div class="line">sudo apt-get install memcached</div></pre></td></tr></table></figure>
<h4 id="python-2-7-环境"><a href="#python-2-7-环境" class="headerlink" title="python(2.7) 环境"></a>python(2.7) 环境</h4><ol>
<li>pip , ipython</li>
<li>Scrapy  python的爬虫框架</li>
<li>python-openssl-dev</li>
</ol>
<p>安装命令如下:<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get install python-pip</div><div class="line">sudo apt-get install python-openssl-dev</div><div class="line">sudo -H pip install --upgrade pip</div><div class="line">sudo -H pip install Scrapy</div></pre></td></tr></table></figure></p>
<h4 id="node-环境"><a href="#node-环境" class="headerlink" title="node 环境"></a>node 环境</h4><ol>
<li>nvm (node version manager)</li>
<li>npm (node package manager)</li>
</ol>
<p>安装完nvm需要重启一下shell。或者source 一下你的.zshrc 或者 .bashrc。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">wget -qO- https://raw.github.com/creationix/nvm/v0.4.0/install.sh | sh</div><div class="line">nvm install 0.10</div><div class="line">sudo apt-get install npm</div><div class="line"></div><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class="line"></div><div class="line">或者下面这个</div><div class="line"></div><div class="line">echo &apos;\n#alias for cnpm\nalias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \</div><div class="line">  --cache=$HOME/.npm/.cache/cnpm \</div><div class="line">  --disturl=https://npm.taobao.org/dist \</div><div class="line">  --userconfig=$HOME/.cnpmrc&quot;&apos; &gt;&gt; ~/.zshrc &amp;&amp; source ~/.zshrc</div><div class="line"></div><div class="line">npm install hexo-cli -g</div></pre></td></tr></table></figure>
<p>npm 淘宝镜像<a href="https://npm.taobao.org/" target="_blank" rel="external">https://npm.taobao.org/</a><br>安装hexo <a href="https://hexo.io" target="_blank" rel="external">https://hexo.io</a></p>
<h4 id="php-相关"><a href="#php-相关" class="headerlink" title="php 相关"></a>php 相关</h4><ol>
<li>composer (php package manager)</li>
<li>laravel</li>
</ol>
<p>安装composer<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">curl -sS https://getcomposer.org/installer | php</div><div class="line">mv composer.phar /usr/local/bin/composer</div></pre></td></tr></table></figure></p>
<p>更多参考，请看<a href="https://segmentfault.com/a/1190000000353129" target="_blank" rel="external">这里</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们拿到一个刚被初始化的server之后，我们需要做一些配置工作，才能让这台server变成适合我们的工作机，一般来说，我通常会做下面这些准备工作。&lt;/p&gt;
&lt;h4 id=&quot;配置zsh&quot;&gt;&lt;a href=&quot;#配置zsh&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
    
      <category term="web" scheme="https://blog.nofile.cc/tags/web/"/>
    
      <category term="linux" scheme="https://blog.nofile.cc/tags/linux/"/>
    
      <category term="zsh" scheme="https://blog.nofile.cc/tags/zsh/"/>
    
      <category term="spider" scheme="https://blog.nofile.cc/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记</title>
    <link href="https://blog.nofile.cc/posts/2016/10/09/note-read.html"/>
    <id>https://blog.nofile.cc/posts/2016/10/09/note-read.html</id>
    <published>2016-10-09T06:38:00.000Z</published>
    <updated>2017-05-08T15:38:21.047Z</updated>
    
    <content type="html"><![CDATA[<h4 id="关于阅读"><a href="#关于阅读" class="headerlink" title="关于阅读"></a>关于阅读</h4><p>如果我一直以没有时间为理由，不去读书，是不是会越来越蠢。</p>
<h4 id="Kindle资源"><a href="#Kindle资源" class="headerlink" title="Kindle资源"></a>Kindle资源</h4><ol>
<li>这个是一个不错的kindle资源网站。目前还比较好用。 <a href="https://www.jiumodiary.com/" target="_blank" rel="external">https://www.jiumodiary.com/</a></li>
<li>我的百度云里面也有不少书，想要的朋友可以从这里拿。<a href="https://pan.baidu.com/s/1i4TEMsH" target="_blank" rel="external">https://pan.baidu.com/s/1i4TEMsH</a> </li>
</ol>
<h4 id="读过的书"><a href="#读过的书" class="headerlink" title="读过的书"></a>读过的书</h4><ol>
<li>基督山伯爵<br> 埋下仇恨，绝境中看到希望，逃生，获得意外的财富，体面的复仇。复仇复了好久，阅尽人间繁华，而不沉溺，实在厉害。</li>
<li>鲁滨逊漂流记<br> 这个是自己打猎，落入荒岛，也是尽力生存，最后找到机会出去了，也获得了一笔意想不到的财富，过上了幸福的生活。</li>
<li>肖申克的救赎<br> 有点励志，要抓住任何可以抓住的机会，不管处境多么难，都要有梦想，做成想做的事，永远不要放弃。</li>
<li>神雕侠侣<br> 最近读完的,电视剧看了好久了，读小说感觉还是很不错的。读小说我只认人物，对杨过有不少喜欢，但感觉他并不完美，有时候也有些讨厌，不过这也算是正常的吧，哪里有完美的人，孰能无过。最讨厌的角色，感觉就是郭芙了,还有姓武的那两个小傻子。</li>
<li>明朝那些事<br> 现在想来，看得基本都完了，有一点点印象，想到这本书现在只有一个想法，历史一直在重演，只不过是换了一批人。</li>
</ol>
<p>貌似只读了这么多，可以看出来，我读书不多。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;关于阅读&quot;&gt;&lt;a href=&quot;#关于阅读&quot; class=&quot;headerlink&quot; title=&quot;关于阅读&quot;&gt;&lt;/a&gt;关于阅读&lt;/h4&gt;&lt;p&gt;如果我一直以没有时间为理由，不去读书，是不是会越来越蠢。&lt;/p&gt;
&lt;h4 id=&quot;Kindle资源&quot;&gt;&lt;a href=&quot;#K
    
    </summary>
    
    
      <category term="阅读" scheme="https://blog.nofile.cc/tags/%E9%98%85%E8%AF%BB/"/>
    
      <category term="感悟" scheme="https://blog.nofile.cc/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>Path Sum II</title>
    <link href="https://blog.nofile.cc/posts/2016/10/09/ag-113.html"/>
    <id>https://blog.nofile.cc/posts/2016/10/09/ag-113.html</id>
    <published>2016-10-09T04:02:00.000Z</published>
    <updated>2017-05-08T15:37:43.563Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Path-Sum-II"><a href="#Path-Sum-II" class="headerlink" title="Path Sum II"></a>Path Sum II</h4><p>和112类似，不过这次是要求出所有的解决方案。</p>
<p>For example:<br>Given the below binary tree and sum = 22,</p>
<pre><code>      5
     / \
    4   8
   /   / \
  11  13  4
 /  \    / \
7    2  5   1
</code></pre><p>return</p>
<pre><code>[
       [5,4,11,2],
       [5,8,4,5]
]
</code></pre><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>简单的DFS，本质上是遍历所有的节点，找到解决方案，然后存储。需要注意的是，python的listcopy的时候需要用到<br>deepcopy才行。可以用内部函数来简化编码。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> copy</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pathSum</span><span class="params">(self, root, mSum)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :type root: TreeNode</div><div class="line">        :type sum: int</div><div class="line">        :rtype: List[List[int]]</div><div class="line">        """</div><div class="line">        ltMap = []</div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">travelRoot</span><span class="params">(root , currentVal , ltTmp)</span>:</span></div><div class="line">            <span class="keyword">if</span> root == <span class="keyword">None</span>:</div><div class="line">                <span class="keyword">return</span></div><div class="line">            <span class="keyword">if</span> root.left == <span class="keyword">None</span> <span class="keyword">and</span> root.right == <span class="keyword">None</span> <span class="keyword">and</span> root.val + currentVal == mSum:</div><div class="line">                ltTmp.append(root.val)</div><div class="line">                ltMap.append(copy.deepcopy(ltTmp))</div><div class="line">                <span class="keyword">return</span></div><div class="line">            travelRoot(root.left , currentVal + root.val , ltTmp + [root.val])</div><div class="line">            travelRoot(root.right, currentVal + root.val , ltTmp + [root.val])</div><div class="line">        </div><div class="line">        travelRoot(root , <span class="number">0</span> , [])</div><div class="line">        <span class="keyword">return</span> ltMap</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">from</span> common <span class="keyword">import</span> CommonUtil</div><div class="line">    root = <span class="keyword">None</span></div><div class="line">    root = CommonUtil.generateTree(root)</div><div class="line">    CommonUtil.printTree(root , <span class="number">0</span>)</div><div class="line">    ns = Solution()</div><div class="line">    ret = ns.pathSum(root , <span class="number">17</span>)</div><div class="line">    <span class="keyword">print</span> ret</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Path-Sum-II&quot;&gt;&lt;a href=&quot;#Path-Sum-II&quot; class=&quot;headerlink&quot; title=&quot;Path Sum II&quot;&gt;&lt;/a&gt;Path Sum II&lt;/h4&gt;&lt;p&gt;和112类似，不过这次是要求出所有的解决方案。&lt;/p&gt;
&lt;p&gt;For
    
    </summary>
    
    
      <category term="leetcode" scheme="https://blog.nofile.cc/tags/leetcode/"/>
    
      <category term="tree" scheme="https://blog.nofile.cc/tags/tree/"/>
    
      <category term="dfs" scheme="https://blog.nofile.cc/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>Path Sum</title>
    <link href="https://blog.nofile.cc/posts/2016/10/09/ag-112.html"/>
    <id>https://blog.nofile.cc/posts/2016/10/09/ag-112.html</id>
    <published>2016-10-09T02:49:00.000Z</published>
    <updated>2017-05-08T15:37:46.068Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Path-Sum"><a href="#Path-Sum" class="headerlink" title="Path Sum"></a>Path Sum</h4><p>Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.</p>
<p>For example:</p>
<pre><code>Given the below binary tree and sum = 22,
          5
         / \
        4   8
       /   / \
      11  13  4
     /  \      \
    7    2      1
</code></pre><p>return true, as there exist a root-to-leaf path 5-&gt;4-&gt;11-&gt;2 which sum is 22.</p>
<h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>应该就是一个简单的DFS.代码里面的common class 是为测试写的类,<a href="https://github.com/xiaolongnk/common-alglib/blob/master/leetcode/common.py" target="_blank" rel="external">实现在这里</a>。因为最终有没有只能等到叶子节点才能知道，所以说只要每个节点的2个叶子中有一个返回True，那么就存在这个方案。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># Definition for a binary tree node.</span></div><div class="line"><span class="comment"># class TreeNode(object):</span></div><div class="line"><span class="comment">#     def __init__(self, x):</span></div><div class="line"><span class="comment">#         self.val = x</span></div><div class="line"><span class="comment">#         self.left = None</span></div><div class="line"><span class="comment">#         self.right = None</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hasPathSum</span><span class="params">(self, root, sum)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :type root: TreeNode</div><div class="line">        :type sum: int</div><div class="line">        :rtype: bool</div><div class="line">        """</div><div class="line">        currentVal = <span class="number">0</span></div><div class="line">        <span class="keyword">return</span> self.travelRoot(root , currentVal , sum)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">travelRoot</span><span class="params">(self , root , currentVal , tSum)</span>:</span></div><div class="line">        <span class="keyword">if</span> root == <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="keyword">if</span> root != <span class="keyword">None</span> <span class="keyword">and</span> root.left == <span class="keyword">None</span> <span class="keyword">and</span> root.right == <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">if</span> currentVal + root.val == tSum:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"></div><div class="line">        l1 = self.travelRoot(root.left , currentVal + root.val , tSum)</div><div class="line">        l2 = self.travelRoot(root.right, currentVal + root.val , tSum)</div><div class="line">        <span class="keyword">return</span> l1 <span class="keyword">or</span> l2</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">from</span> common <span class="keyword">import</span> CommonUtil</div><div class="line">    root = <span class="keyword">None</span></div><div class="line">    root = CommonUtil.generateTree(root)</div><div class="line">    CommonUtil.printTree(root , <span class="number">0</span>)</div><div class="line">    ns = Solution()</div><div class="line">    ret = ns.hasPathSum(root , <span class="number">17</span>)</div><div class="line">    <span class="keyword">print</span> ret</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Path-Sum&quot;&gt;&lt;a href=&quot;#Path-Sum&quot; class=&quot;headerlink&quot; title=&quot;Path Sum&quot;&gt;&lt;/a&gt;Path Sum&lt;/h4&gt;&lt;p&gt;Given a binary tree and a sum, determine if th
    
    </summary>
    
    
      <category term="leetcode" scheme="https://blog.nofile.cc/tags/leetcode/"/>
    
      <category term="tree" scheme="https://blog.nofile.cc/tags/tree/"/>
    
      <category term="dfs" scheme="https://blog.nofile.cc/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>Best Time to Buy and Sell Stock</title>
    <link href="https://blog.nofile.cc/posts/2016/10/09/ag-121.html"/>
    <id>https://blog.nofile.cc/posts/2016/10/09/ag-121.html</id>
    <published>2016-10-09T02:37:00.000Z</published>
    <updated>2017-05-08T15:37:51.161Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Best-Time-to-Buy-and-Sell-Stock"><a href="#Best-Time-to-Buy-and-Sell-Stock" class="headerlink" title="Best Time to Buy and Sell Stock"></a><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock/" target="_blank" rel="external">Best Time to Buy and Sell Stock</a></h4><p>题目要求是如何购买可以获益最大,比较简单，但还是比较有意思的。两个样例如下：</p>
<pre><code>Example 1:
Input: [7, 1, 5, 3, 6, 4]
Output: 5

max. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than buying price)
Example 2:
Input: [7, 6, 4, 3, 1]
Output: 0

In this case, no transaction is done, i.e. max profit = 0.
</code></pre><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>我们有两个变量，分别是<code>购买价格</code>和<code>最大获益值</code>。<br>开始的时候先购买第一天的，然后后面每一天都这样判断，如果当天的价格小于上一次购买，那么把上一次购买换成今天的价格，如果不小于的话，那么看当天的获益是不是比前面一次的获益多，如果是的话，就更新一下最大获益值。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProfit</span><span class="params">(self, prices)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        :type prices: List[int]</div><div class="line">        :rtype: int</div><div class="line">        """</div><div class="line">        <span class="keyword">if</span> len(prices) == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line">        bought_price = prices[<span class="number">0</span>]</div><div class="line">        max_benefit = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> prices:</div><div class="line">            cnp = i - bought_price</div><div class="line">            <span class="keyword">if</span> cnp &lt; <span class="number">0</span>:</div><div class="line">                bought_price = i</div><div class="line">            <span class="keyword">elif</span> cnp &gt; max_benefit:</div><div class="line">                max_benefit = cnp</div><div class="line">        <span class="keyword">return</span> max_benefit</div><div class="line">       </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></div><div class="line">    sol = Solution()</div><div class="line">    tst = [<span class="number">7</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">4</span>]</div><div class="line">    ans = sol.maxProfit(tst)</div><div class="line">    <span class="keyword">print</span> ans</div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Best-Time-to-Buy-and-Sell-Stock&quot;&gt;&lt;a href=&quot;#Best-Time-to-Buy-and-Sell-Stock&quot; class=&quot;headerlink&quot; title=&quot;Best Time to Buy and Sell Stoc
    
    </summary>
    
    
      <category term="leetcode" scheme="https://blog.nofile.cc/tags/leetcode/"/>
    
      <category term="dynamic programming" scheme="https://blog.nofile.cc/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>前端笔记</title>
    <link href="https://blog.nofile.cc/posts/2016/09/09/note-web.html"/>
    <id>https://blog.nofile.cc/posts/2016/09/09/note-web.html</id>
    <published>2016-09-09T06:43:00.000Z</published>
    <updated>2017-05-08T15:38:11.536Z</updated>
    
    <content type="html"><![CDATA[<h4 id="margin"><a href="#margin" class="headerlink" title="margin"></a>margin</h4><p>margin: 的4个参数。up ,right, down , left;<br>如果只有一个参数，那么表示4个都是n px。可以是1–4个参数。</p>
<h4 id="some-input-type"><a href="#some-input-type" class="headerlink" title="some input type"></a>some input type</h4><p>radio, checkbox , button, 他们都有对应的时间，可以在里面添加对应的 函数。可以带参数的。<br>checkbox 也可以写成数组。<br>name=’chk[]’  $_REQUEST [‘chk’] 取值的方式是这样的。</p>
<h4 id="fontawesome"><a href="#fontawesome" class="headerlink" title="fontawesome"></a>fontawesome</h4><p>学习两个前端页面会使用到的js.</p>
<p><a href="https://www.woothemes.com/flexslider/" target="_blank" rel="external">https://www.woothemes.com/flexslider/</a>  这个是用来做轮播图的js。<br><a href="http://fontawesome.dashgame.com/" target="_blank" rel="external">http://fontawesome.dashgame.com/</a><br>这个是用来给页面中显示一些字体用的。还有一些常用的图标，用法也很简单，</p>
<h4 id="html-meta-标签"><a href="#html-meta-标签" class="headerlink" title="html meta 标签"></a>html meta 标签</h4><p>304 错误. 强制不从本地设备读取内容.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在页面中中使让一段文字在一个div中垂直居中？<br><a href="http://stackoverflow.com/questions/79461/vertical-alignment-of-elements-in-a-div" target="_blank" rel="external">http://stackoverflow.com/questions/79461/vertical-alignment-of-elements-in-a-div</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;margin&quot;&gt;&lt;a href=&quot;#margin&quot; class=&quot;headerlink&quot; title=&quot;margin&quot;&gt;&lt;/a&gt;margin&lt;/h4&gt;&lt;p&gt;margin: 的4个参数。up ,right, down , left;&lt;br&gt;如果只有一个参数，那么表示
    
    </summary>
    
    
      <category term="html" scheme="https://blog.nofile.cc/tags/html/"/>
    
      <category term="css" scheme="https://blog.nofile.cc/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu学习笔记</title>
    <link href="https://blog.nofile.cc/posts/2016/09/09/note-ubuntu.html"/>
    <id>https://blog.nofile.cc/posts/2016/09/09/note-ubuntu.html</id>
    <published>2016-09-09T06:42:00.000Z</published>
    <updated>2017-05-08T15:38:18.654Z</updated>
    
    <content type="html"><![CDATA[<h4 id="tmux-vim-slowstart"><a href="#tmux-vim-slowstart" class="headerlink" title="tmux vim slowstart"></a>tmux vim slowstart</h4><p>tmux 中vim slow start 的原因,就是因为开了多个tmux,启动速度就变慢了.<br>查看了slowlog,发现是因为xsmp消耗了大概1s的时间.只要保证一个tmux运行就可以了.</p>
<p>让你的ubuntu文件夹变成彩色的.<br>可以添加下面的ppa,添加这个<br>sudo add-apt-repository ppa:costales/folder-color<br>然后安装下面这个 folder-color 就可以了.<br>sudo apt-get install folder-color</p>
<h4 id="ubuntu-get-source-code"><a href="#ubuntu-get-source-code" class="headerlink" title="ubuntu get source code"></a>ubuntu get source code</h4><p>如何获取ubuntu的源码<br>你可以获取任何一个你所使用的源码包.这就是开源的系统.<br>只要你的系统的源里有dep-src 这个选项,那么就可以随便获得系统源码.<br>就像下面这样.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><div class="line">deb-src http://archive.canonical.com/ubuntu trusty partner</div><div class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty main restricted</div><div class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty multiverse</div><div class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty universe</div><div class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse</div><div class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty-updates main restricted</div><div class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty-updates multiverse</div><div class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty-updates universe</div><div class="line">deb-src http://extras.ubuntu.com/ubuntu trusty main</div><div class="line">deb-src http://security.ubuntu.com/ubuntu trusty-security main restricted</div><div class="line">deb-src http://security.ubuntu.com/ubuntu trusty-security multiverse</div><div class="line">deb-src http://security.ubuntu.com/ubuntu trusty-security universe</div><div class="line"></div><div class="line">使用下面的命令.</div><div class="line"></div><div class="line">sudo apt-cache showsrc gedit <span class="comment">#showsrc 可以用来查询有没有你需要的源码包</span></div><div class="line">sudo apt-cache <span class="built_in">source</span> gedit  <span class="comment">#source 命令用来获取你需要的源码包</span></div></pre></td></tr></table></figure>
<h4 id="ubuntu自己编译出deb"><a href="#ubuntu自己编译出deb" class="headerlink" title="ubuntu自己编译出deb"></a>ubuntu自己编译出deb</h4><p>当然在这些工作之前,我们需要确保安装一些基本的工具.<br>dpkg-dev 先安装这个.</p>
<p>在编译源码包之前,需要安装具有依赖关系的软件包,可以使用这个命令,就是上面的那个.<br>build-dep 命令.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get build-dep xxx</div><div class="line">#通过上面两个命令,就可以得到自己的源码包了.然后利用</div><div class="line">cd yoursrc</div><div class="line">sudo dpkg-buildpackage</div></pre></td></tr></table></figure>
<p>这样就可以得到你的dep文件了.<br>可以使用下面的命令来安装deb文件.<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo dpkg -i *.deb</div></pre></td></tr></table></figure></p>
<p>有了上面的知识,你就可以利用自己的系统,学习各种工具的源码了,包括vim , emacs.<br>加油吧.^_^</p>
<h4 id="ubuntu-desktop"><a href="#ubuntu-desktop" class="headerlink" title="ubuntu desktop"></a>ubuntu desktop</h4><p>firefox 插件 <code>json</code>, <code>vimperator</code>, <code>firebug</code>.<br>chrome插件 <code>json</code> , <code>vimium</code> , 登录自己的账号之后，可以同步chrome插件和书签，很方便</p>
<p>ubuntu 关闭没用的 crash report。<br>执行<code>sudo vim /etc/default/apport</code> 把那个1 改成0<br>ubuntu 上换显卡驱动要谨慎，很容易就重登陆之后就进不去系统了。如果进不去系统了，那就去认真google吧。我曾经折腾过，这里就不记录了，<br>总之不建议在在ubuntu上折腾太多桌面的东西，linux是用来做server的，好多经典的软件都是no gui的。所以应当将精力放在server这边来，桌面的话，<br>简单玩玩就可以了。</p>
<p>在你的本地文件里面. .local/share/applications/ 里面把对应的删除,重新登陆就可以看到你讨厌的那个东西不见了.</p>
<p>重启linux的图形界面<code>startx sudo service start lightdm</code><br><code>lspci</code> 和 <code>glxinfo | head</code>  如果显卡驱动有问题，这个命令会不正常。<br>正常的话，会列出来一些相关的东西。</p>
<p>modinfo<br>系统默认安装的驱动是这个。<br>xserver-xorg-video-intel<br>modprobe -r nouveau  用这个命令来卸载这个模块，从内核中卸载这个模块。</p>
<p>ubuntu firefox flash <code>sudo apt-get install flashplugin-downloader</code></p>
<p>在linux中,我想升级gedit,比如说我的是 ubuntu14.04, 但是在 ubuntu15.10 里面,gedit 的版本是比<br>我的新的.但是在14.04里面我确用不了最新的gedit .<br>这个时候,我可以从官网下载最新的gedit ,安装,然而安装的时候会出现一些问题.这时候怎么办呢.可以这样.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get build-deb gedit</div></pre></td></tr></table></figure>
<p>然后执行安装命令就可以了.安装应该不会出错了.</p>
<p>ubuntu 创建自定义的快捷方式launcher。<br>ubuntu launcher.  alacarte<br>在mate桌面上安装创建自己的启动方式．要给我的zendstudio 创建．</p>
<p><code>rm -rf *</code>是不会删除隐藏文件的.  linux rm hidden files <code>rm -rf .*</code><br>这个命令会过滤调. .. ,这两个目录是无法删除的.</p>
<p>ubuntu 安装中文字体<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get install mysql-workbench</div><div class="line">sudo apt-get install ttf-wqy-microhei  </div><div class="line">sudo apt-get install ttf-wqy-zenhei</div></pre></td></tr></table></figure></p>
<p>ubuntu 16.04 默认启动命令行<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">关闭</div><div class="line">sudo systemctl set-default multi-user.target</div><div class="line"></div><div class="line">启动lightdm</div><div class="line">sudo systemctl start lightdm</div><div class="line"></div><div class="line">恢复</div><div class="line">systemctl set-default graphical.target</div></pre></td></tr></table></figure></p>
<h4 id="linux-权限管理"><a href="#linux-权限管理" class="headerlink" title="linux 权限管理"></a>linux 权限管理</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># provided their password</div><div class="line"># (Note that later entries override this, so you might need to move</div><div class="line"># it further down)</div><div class="line">%sudo ALL=(ALL) ALL</div><div class="line"></div><div class="line">groupadd sudo</div><div class="line">sudo usermod -aG sudo work</div></pre></td></tr></table></figure>
<p><a href="http://www.cnblogs.com/xd502djj/archive/2011/11/23/2260094.html" target="_blank" rel="external">http://www.cnblogs.com/xd502djj/archive/2011/11/23/2260094.html</a></p>
<p>允许程序没有sudo权限执行<br>sudo chmod +s /usr/sbin/hddtemp<br>这样就可以让 hddtemp 在没有 sudo 权限的情况下运行了。</p>
<h4 id="Linux-更新时间"><a href="#Linux-更新时间" class="headerlink" title="Linux 更新时间"></a>Linux 更新时间</h4><p>Linux 更新时间.主要的就是这个命令.<br>ntpdate cn.pool.ntp.org<br>好像 windows 时间 和 Linux 时间一定会又一个出问题.现在有点没有办法.<br>将时间写入到 cmos</p>
<p>主要是系统时间写入 硬件时间 和 硬件时间写入系统的区别.<br>sudo hwclock –systohc<br>sudo hwclock –hctosys</p>
<h4 id="ubuntu-常用命令"><a href="#ubuntu-常用命令" class="headerlink" title="ubuntu 常用命令"></a>ubuntu 常用命令</h4><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>apt-cache search</code></td>
<td>ubuntu 在source里查找某个软件包</td>
</tr>
<tr>
<td><code>apt-cache install</code></td>
<td>安装指定的软件包</td>
</tr>
<tr>
<td><code>dpkg -i your.deb</code></td>
<td>安装一个deb文件</td>
</tr>
<tr>
<td><code>sudo dd if=/home/your.iso of=/dev/sdb</code></td>
<td>用U盘烧镜像</td>
</tr>
<tr>
<td><code>groups faith</code></td>
<td>查看faith的用户详情</td>
</tr>
</tbody>
</table>
<p><code>ls | xargs rm -rf *</code>这个命令比较调皮，markdown的表格里写不进去，单独拿出来伺候。<code>删除文件，主要是xargs，可以将管道传过来的内容交给后面的命令，作为它的输入</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;tmux-vim-slowstart&quot;&gt;&lt;a href=&quot;#tmux-vim-slowstart&quot; class=&quot;headerlink&quot; title=&quot;tmux vim slowstart&quot;&gt;&lt;/a&gt;tmux vim slowstart&lt;/h4&gt;&lt;p&gt;tmux 中
    
    </summary>
    
    
      <category term="linux" scheme="https://blog.nofile.cc/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://blog.nofile.cc/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>sphinx学习笔记</title>
    <link href="https://blog.nofile.cc/posts/2016/09/09/note-sphinx.html"/>
    <id>https://blog.nofile.cc/posts/2016/09/09/note-sphinx.html</id>
    <published>2016-09-09T06:42:00.000Z</published>
    <updated>2017-05-08T15:37:53.822Z</updated>
    
    <content type="html"><![CDATA[<h4 id="sphinx实践"><a href="#sphinx实践" class="headerlink" title="sphinx实践"></a>sphinx实践</h4><p>用shpinx实现一个搜索相关的小项目<br>需要安装sphinx，然后和mysql配合使用。</p>
<h4 id="sphinx安装配置"><a href="#sphinx安装配置" class="headerlink" title="sphinx安装配置"></a>sphinx安装配置</h4><p>编译安装sphinx。</p>
<h4 id="中文分词"><a href="#中文分词" class="headerlink" title="中文分词"></a>中文分词</h4><p>需要下载一个中文字典，应该有好多现成的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;sphinx实践&quot;&gt;&lt;a href=&quot;#sphinx实践&quot; class=&quot;headerlink&quot; title=&quot;sphinx实践&quot;&gt;&lt;/a&gt;sphinx实践&lt;/h4&gt;&lt;p&gt;用shpinx实现一个搜索相关的小项目&lt;br&gt;需要安装sphinx，然后和mysql配合使用
    
    </summary>
    
    
      <category term="sphinx" scheme="https://blog.nofile.cc/tags/sphinx/"/>
    
      <category term="搜索" scheme="https://blog.nofile.cc/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>shell 学习笔记</title>
    <link href="https://blog.nofile.cc/posts/2016/09/09/note-shell.html"/>
    <id>https://blog.nofile.cc/posts/2016/09/09/note-shell.html</id>
    <published>2016-09-09T06:42:00.000Z</published>
    <updated>2017-05-08T15:38:25.828Z</updated>
    
    <content type="html"><![CDATA[<h4 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h4><p>the follow command can be used to restart php-fpm in server.<br>ps aux | grep ‘php-fpm’ | awk ‘{print $1}’ | xargs kill -USR2<br>-F option 是用来改变默认的分隔符的。<br>awk -F ‘:’ ‘{print $3}’<br>awk 的 BEGIN 和 END 语句的功能。<br>BEGIN 是最开始的部分执行的，然后AWK开始读取文件内容，进行处理。<br>END 是最后面结束执行的.<br><code>$NR</code> 是拿到最后一列。</p>
<h4 id="sed笔记"><a href="#sed笔记" class="headerlink" title="sed笔记"></a>sed笔记</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sed &apos;s/xx/ds/&apos; note</div><div class="line"></div><div class="line">[ ! -x result ] &amp;&amp; mkdir result</div><div class="line">for i in `ls *.grb`</div><div class="line">do</div><div class="line">    out=`echo $i | sed &apos;s/GLDAS_NOAH10_M.A//&apos; | sed &apos;s/\..*[[:graph:]]//&apos;`</div><div class="line">    wgrib $i &gt; result/$out&quot;.out&quot;</div><div class="line">done</div><div class="line"></div><div class="line">sed -i &quot;This command to use replace the input file&quot;</div><div class="line">just a simple example.</div><div class="line">sed -i &apos;s/--/-/&apos;</div></pre></td></tr></table></figure>
<p><strong>mac 下sed -i 的问题</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sed -i &apos;s/a/b&apos;       #linux style</div><div class="line">sed -i &apos;&apos; &apos;s/a/b/&apos;   #mac style , mac 上的sed要求给一个备份文件的文件名，会在替换前做一个备份，</div><div class="line">#不需要的话给个空参数，就不会备份。  前面的那个空格不能少</div></pre></td></tr></table></figure>
<p>d 表示是删除的意思。用新文件覆盖旧文件。<br>sed ‘/vim/d’ ~/.bashrc &gt; ~/.bashrc</p>
<h4 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h4><p>grep -E   支持扩展的正则<br>grep -o   只输出指定内容, only-match 的含义<br>grep -F   相当于 fgrep<br>grep -v   不匹配指定正则的指令<br>grep 输出匹配内容的上下两行内容,输出上下文,记得这个参数.<br>grep -C 2 ‘linux’<br>grep -i 进行大小写无关的搜索<br>grep -P perl分格的正则</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">grep -i -Po &quot;HREF=\&quot;.*?\&quot;&quot; bookmarks_4_27_15.html</div></pre></td></tr></table></figure>
<h4 id="find使用的例子"><a href="#find使用的例子" class="headerlink" title="find使用的例子"></a>find使用的例子</h4><p>下面这个script结合了find 的regex参数的用法。find regex 和 那么的区别还是挺大的。regex搜索的输出是全名的，name知识一个短的名字。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"># 要搜索的路径。</div><div class="line">path=&quot;$HOME&quot;</div><div class="line"></div><div class="line">for i in `find $path -regex &quot;.*/[0-9]\&#123;6\&#125;/*&quot; -type d 2&gt;/dev/null`</div><div class="line">do </div><div class="line">    echo $i</div><div class="line">    for j in `ls $i`</div><div class="line">    do</div><div class="line">        echo $j</div><div class="line">        m=`echo &quot;$j&quot; | cut -d. -f2`</div><div class="line">        if [ $m != &apos;log&apos; ]</div><div class="line">        then</div><div class="line">            echo &quot;mv for $j&quot;</div><div class="line">            mv $i&quot;/&quot;$j $i&quot;/&quot;$j&quot;.log&quot;</div><div class="line">        fi</div><div class="line">    done</div><div class="line">done</div></pre></td></tr></table></figure>
<h4 id="shell重定向"><a href="#shell重定向" class="headerlink" title="shell重定向"></a>shell重定向</h4><p>来自这个链接 <a href="http://www.cnblogs.com/yangyongzhi/p/3364939.html" target="_blank" rel="external">http://www.cnblogs.com/yangyongzhi/p/3364939.html</a></p>
<p>./Test.py 1&gt;normal 2&gt;error 3&gt;&amp;2 2&gt;&amp;1 1&gt;&amp;3<br>./Test.py 3&gt;&amp;2 2&gt;&amp;1 1&gt;&amp;3 1&gt;normal 2&gt;error  </p>
<p>可以通过这两个命令看出差别,其实就是从右向左执行的.</p>
<p>具体的执行过程是这样的,一个完整的shell指令的执行是从右往左的.<br>先执行 1&gt;&amp;3 , 然后执行 2&gt;&amp;1 , 3&gt;&amp;2</p>
<p>nohup的使用<br>在mac中，在tmux中使用nohup会有问题，会抛出下面这样的错误。所以只能在开一个终端执行。<br>nohup: can’t detach from console: Undefined error: 0<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">nohup redis-server &amp; &gt;/dev/null</div></pre></td></tr></table></figure></p>
<h4 id="git-笔记"><a href="#git-笔记" class="headerlink" title="git 笔记"></a>git 笔记</h4><p>一个项目可以添加多个源,origin是默认的一个源.并且也可以跨源合并.这是比较高级的用法.<br>如果要跨项目合并. git 跨项目合并.</p>
<p>git remote add code “url”<br>git push code master</p>
<p>git remote add.</p>
<p>将一个远端的项目添加到新的分支上,然后可以合并。<br>git remote add name git@gitlabserver.meiliworks.com:higo/api.git<br>删除这个分支。<br>git remote rm old_pandora<br>git 将某个分支强制覆盖。比如我想用newpush  的代码完全覆盖 master 的代码。<br>可以这样做。<br>git push origin newpush:master -f</p>
<p>git remote add origin url  #这样可以讲自己的git目录添加到远端仓库.很方便.<br>同一个项目可以添加多个远端仓库,可以一起使用.</p>
<p>git config –global core.editor “vim”<br>git config core.fileMode false<br>这样你的git就不会官 fileMode 的变化了，默认的模式是 true 的。</p>
<h4 id="shell-get-your-ip"><a href="#shell-get-your-ip" class="headerlink" title="shell get your ip"></a>shell get your ip</h4><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">ifconfig | grep -E -o &quot;inet ([0-9]&#123;1,3&#125;.)&#123;3&#125;([0-9]&#123;1,3&#125;)&quot; |  grep -E  -o &quot;([0-9]&#123;1,3&#125;.)&#123;3&#125;([0-9]&#123;1,3&#125;)&quot; | tail -n 1</div><div class="line">ip a| grep -E -o &quot;inet addr:([0-9]&#123;1,3&#125;.)&#123;3&#125;([0-9]&#123;1,3&#125;)&quot; |  grep -E  -o &quot;([0-9]&#123;1,3&#125;.)&#123;3&#125;([0-9]&#123;1,3&#125;)&quot; | tail -n 1</div></pre></td></tr></table></figure>
<p>linux 下 ifconfig | grep ‘inet ‘ | awk ‘{split($2, ip_cntr, “:”); print ip_cntr[2];}’<br>netstat –tunlp |grep 90</p>
<h4 id="shell-functions"><a href="#shell-functions" class="headerlink" title="shell functions"></a>shell functions</h4><p>函数的返回值,函数的参数.<br><a href="http://www.jb51.net/article/33895.htm" target="_blank" rel="external">http://www.jb51.net/article/33895.htm</a><br>这里看到了一些参考,主要是这两个参数, $@ 和 $* 是一样的,可以将函数的参数当做一个字符串.<br>如果你仍然利用$1,$#,$0这些而参数,那么你可能得不到你想要的结果.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">shell 执行字符串命令。可以这样。</div><div class="line">eval $cmd</div><div class="line"></div><div class="line">date &apos;+%Y-%m-%d&apos;</div><div class="line">httpd -S</div><div class="line"></div><div class="line">shell 脚本中的 空变量。可能是你的程序报错，所以写判断的时候需要考虑变量为空的情况。</div><div class="line">如果出现这样的情况，报的错误可能是这个。</div><div class="line">&quot;[: =: unary operator expected&quot;</div><div class="line"></div><div class="line">a=$(($i + 1))</div><div class="line"></div><div class="line">同时满足2各条件</div><div class="line"></div><div class="line">if test &quot;$dev&quot; = &quot;0&quot; -a &quot;$devok&quot; = &quot;0&quot; ; then</div><div class="line">	echo &quot;your comment&quot;</div><div class="line">	echo &quot;your comment&quot;</div><div class="line">exit 1</div><div class="line">fi</div></pre></td></tr></table></figure>
<p>shell中函数的返回值貌似可以用 $? 变量拿到。<br>但是 return 是不支持返回非数字类型的。这是不是一个新的约束条件。<br>对于数值运算，可以实用 expr 这个工具，其实这是另一个简单的工具，可以用 man 手册来查看帮助文档。<br>shell 中有几个比较特殊的变量。<br>$0 表示当前脚本的名字<br>$1 $2 … $i  第 i 个参数<br>$# 参数的个数。<br>$?</p>
<p>如何调试shell。<br>bash -x your.sh 就可以看你的shell的执行过程了。<br>或者在shell的开始部分增加一行，set -x。</p>
<p><code>crontab l</code>列出当前的任务。分 时 日 月 星期  执行命令,* 表示任意的变量;<br>在linux 下，你当前用户的crontab文件存放在 /var/spool/cron/ 目录下，这个文件以你的用户身份命名。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">00 23 * * * run-your script  每天23:00 执行你的脚本。其实我需要做的就是一行命令。</div><div class="line">10 1 * * 6,0 /usr/local/etc/rc.d/lighttpd restart  这个任务表示每周6和周日的1:10重启服务器。注意逗号，表示多个的意思。再看下面一个。</div><div class="line">* */1 * * * /usr/local/etc/rc.d/lighttpd restart  注意这个符号/ 表示每个一个小时重启一下服务器。</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;awk&quot;&gt;&lt;a href=&quot;#awk&quot; class=&quot;headerlink&quot; title=&quot;awk&quot;&gt;&lt;/a&gt;awk&lt;/h4&gt;&lt;p&gt;the follow command can be used to restart php-fpm in server.&lt;br&gt;ps
    
    </summary>
    
    
      <category term="shell" scheme="https://blog.nofile.cc/tags/shell/"/>
    
      <category term="awk" scheme="https://blog.nofile.cc/tags/awk/"/>
    
      <category term="sed" scheme="https://blog.nofile.cc/tags/sed/"/>
    
      <category term="grep" scheme="https://blog.nofile.cc/tags/grep/"/>
    
  </entry>
  
  <entry>
    <title>mac常用软件</title>
    <link href="https://blog.nofile.cc/posts/2016/09/09/note-software.html"/>
    <id>https://blog.nofile.cc/posts/2016/09/09/note-software.html</id>
    <published>2016-09-09T06:42:00.000Z</published>
    <updated>2017-05-08T15:38:09.151Z</updated>
    
    <content type="html"><![CDATA[<h4 id="charles-APP代理软件"><a href="#charles-APP代理软件" class="headerlink" title="charles APP代理软件"></a>charles APP代理软件</h4><p>charles 破解。我的link。 <a href="http://pan.baidu.com/s/1i4UUbOh" target="_blank" rel="external">http://pan.baidu.com/s/1i4UUbOh</a></p>
<h4 id="Dash"><a href="#Dash" class="headerlink" title="Dash"></a>Dash</h4><p>非常便捷的API手册，方便查询。</p>
<h4 id="PhpStorm"><a href="#PhpStorm" class="headerlink" title="PhpStorm"></a>PhpStorm</h4><p>PHP 开发的好帮手，可以帮你避免一些低级错误。</p>
<h4 id="WebStorm"><a href="#WebStorm" class="headerlink" title="WebStorm"></a>WebStorm</h4><p>和Phpstorm是同一个公司开发的，使用上和PhpStorm 差不多,用于偏前端的开发<br>工作场景。</p>
<h4 id="ipython"><a href="#ipython" class="headerlink" title="ipython"></a>ipython</h4><p>Python 命令行工具，和Python不同的是，这个可以进行命令提示，方便初学者。</p>
<h4 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a>Postman</h4><p>管理接口，方便重用，经常和一堆接口打交道的话，这个会很方便。</p>
<pre><code>以上貌似除了postman，其他的都是付费的。不过买起来确实很贵，但破解都
相对容易，需要的话，请自行百度，都很简单。
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;charles-APP代理软件&quot;&gt;&lt;a href=&quot;#charles-APP代理软件&quot; class=&quot;headerlink&quot; title=&quot;charles APP代理软件&quot;&gt;&lt;/a&gt;charles APP代理软件&lt;/h4&gt;&lt;p&gt;charles 破解。我的link。
    
    </summary>
    
    
      <category term="开发工具" scheme="https://blog.nofile.cc/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
      <category term="工程效率" scheme="https://blog.nofile.cc/tags/%E5%B7%A5%E7%A8%8B%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>javascript 学习笔记</title>
    <link href="https://blog.nofile.cc/posts/2016/09/09/note-js.html"/>
    <id>https://blog.nofile.cc/posts/2016/09/09/note-js.html</id>
    <published>2016-09-09T06:39:00.000Z</published>
    <updated>2017-05-08T15:37:52.630Z</updated>
    
    <content type="html"><![CDATA[<h4 id="jquery常识"><a href="#jquery常识" class="headerlink" title="jquery常识"></a>jquery常识</h4><p>如果<code>$()</code> 的括号里面是一个dom元素的话，这个东西就是一个jquery对象。<br>jquery 的方法，on ，可以绑定事件，each可以循环遍历数组。<br>同时js自己的array也是一个对象，有foreach方法。要注意和jquery的each 方法区分。<br>js 几个常用的事件<code>keyup onchange click</code></p>
<p>js 的闭包函数，这几天php中也用了不少，一个是array_walk, usort()<br>有些场景中用这些函数是很方便的，这些函数都有自己适合的场景，要在<br>合适场景使用,才能体现出这些函数的作用。</p>
<h4 id="js-正则"><a href="#js-正则" class="headerlink" title="js 正则."></a>js 正则.</h4><p>正则表达式各种语言基本都是类似的，选择任一种实现都可以。<br>^匹配开头<br>$匹配结尾<br>除了一些最基本的之外，可以简单思考下下面这些问题</p>
<p>贪婪匹配<br>跨行匹配<br>.<em> 尽可能多的匹配<br>.</em>? 匹配到一个就可以了</p>
<h4 id="js-localstorage"><a href="#js-localstorage" class="headerlink" title="js localstorage"></a>js localstorage</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">js localStorage.</div><div class="line">localStorage.getItem();</div><div class="line">localStorage.setItem();</div></pre></td></tr></table></figure>
<h4 id="underscore"><a href="#underscore" class="headerlink" title="underscore"></a>underscore</h4><p>Underscore提供了100多个函数,包括常用的: map, filter, invoke — 当然还有更多专业的辅助函数,如:函数绑定, JavaScript模板功能,创建快速索引, 强类型相等测试, 等等.</p>
<p>详细的文档可以参见这里。<a href="http://www.css88.com/doc/underscore/" target="_blank" rel="external">http://www.css88.com/doc/underscore/</a></p>
<p>####jquery on 的代理实现</p>
<p>记得有这样一个场景。<br>一个页面里面会使用到弹层，弹层上面有一些按钮，需要给这些按钮绑定事件。<br>可以使用on方法绑定。但是在js代码执行的时候，这个坦层并没有出现，页面中并没有<br>这个dom对象。这个时候，需要用到on的另一种使用方法。在他的父元素上绑定。<br>parent.on(‘click’,’selector’,function(){})<br>是一种类似这样的用法，当时这个解决了个很重要的问题。<br>jquery 中给一个元素中追加一些属性可以用append方法来实现。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;jquery常识&quot;&gt;&lt;a href=&quot;#jquery常识&quot; class=&quot;headerlink&quot; title=&quot;jquery常识&quot;&gt;&lt;/a&gt;jquery常识&lt;/h4&gt;&lt;p&gt;如果&lt;code&gt;$()&lt;/code&gt; 的括号里面是一个dom元素的话，这个东西就是一个jqu
    
    </summary>
    
    
      <category term="javascript" scheme="https://blog.nofile.cc/tags/javascript/"/>
    
      <category term="web" scheme="https://blog.nofile.cc/tags/web/"/>
    
      <category term="programming" scheme="https://blog.nofile.cc/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>Linux VPN 配置</title>
    <link href="https://blog.nofile.cc/posts/2016/08/29/note-vpn.html"/>
    <id>https://blog.nofile.cc/posts/2016/08/29/note-vpn.html</id>
    <published>2016-08-29T06:43:00.000Z</published>
    <updated>2017-05-08T15:37:55.039Z</updated>
    
    <content type="html"><![CDATA[<h4 id="ubuntu14-04-安装vpn"><a href="#ubuntu14-04-安装vpn" class="headerlink" title="ubuntu14.04 安装vpn"></a>ubuntu14.04 安装vpn</h4><p>这个是最正确的教程，没有之一。<br><a href="http://mad-scientist.us/juniper.html" target="_blank" rel="external">http://mad-scientist.us/juniper.html</a><br>下面是一个简单的总结</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get install libstdc++6:i386 lib32z1 lib32ncurses5 libxext6:i386 libxrender1:i386 libxtst6:i386 libxi6:i386</div><div class="line">sudo apt-get install openjdk-7-jre icedtea-7-plugin openjdk-7-jre:i386</div><div class="line">sudo apt-get install  icedtea-plugin</div><div class="line">sudo apt-get install libc6-i386 lib32nss-mdns</div><div class="line">sudo apt-get install libgtk2-perl libwww-perl</div><div class="line">wget -q -O /tmp/msjnc https://raw.github.com/madscientist/msjnc/master/msjnc</div><div class="line">chmod 755 /tmp/msjnc</div><div class="line">sudo cp /tmp/msjnc /usr/bin</div></pre></td></tr></table></figure>
<p><a href="http://www.scc.kit.edu/scc/net/juniper-vpn/linux/" target="_blank" rel="external">http://www.scc.kit.edu/scc/net/juniper-vpn/linux/</a></p>
<p>还可以参考这个帖子。需要得到realm这个东西，这个东西，去你公司的vpn网站爬一下就可以了。<br>搜索一下realm这个字，就可以看到这个内容的值。<br>最终推荐使用哪个客户端,比mac的客户端还好用。<br>不过如果没有特别的爱好，还是用mac吧,折腾起来，还是有点麻烦的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;ubuntu14-04-安装vpn&quot;&gt;&lt;a href=&quot;#ubuntu14-04-安装vpn&quot; class=&quot;headerlink&quot; title=&quot;ubuntu14.04 安装vpn&quot;&gt;&lt;/a&gt;ubuntu14.04 安装vpn&lt;/h4&gt;&lt;p&gt;这个是最正确的教程，
    
    </summary>
    
    
      <category term="vpn msjnc" scheme="https://blog.nofile.cc/tags/vpn-msjnc/"/>
    
  </entry>
  
  <entry>
    <title>C学习笔记</title>
    <link href="https://blog.nofile.cc/posts/2016/08/28/note-c.html"/>
    <id>https://blog.nofile.cc/posts/2016/08/28/note-c.html</id>
    <published>2016-08-28T09:39:00.000Z</published>
    <updated>2017-05-08T15:38:16.281Z</updated>
    
    <content type="html"><![CDATA[<h4 id="C文件的编译过程"><a href="#C文件的编译过程" class="headerlink" title="C文件的编译过程"></a>C文件的编译过程</h4><p>编译一个c文件，产生一个可执行文件，这个过程分为四个步骤</p>
<ol>
<li>.c 文件到 .i 文件， <code>--&gt;</code> .s 文件 <code>--&gt;</code> .o 文件 <code>--&gt;</code> 可执行文件<br>分别是预处理， 编译， 汇编， 链接</li>
</ol>
<p>预处理所做的事情。</p>
<p>gcc -o helloworld.i helloworld.c -E</p>
<ol>
<li>将 include 变成真实的东西</li>
<li>宏替换。 </li>
<li>宏函数的优点。比一些函数要方便，</li>
<li>条件编译，对于程序的移植和调试，非常有用。</li>
</ol>
<h4 id="C语言中的宏"><a href="#C语言中的宏" class="headerlink" title="C语言中的宏"></a>C语言中的宏</h4><ol>
<li><p>条件宏</p>
<pre><code>#include &lt;iostream&gt;
#include &quot;head.h&quot;
#include &quot;head.h&quot;
if you include &quot;head.h&quot; twice, you find you can compile your file
 as well.but if your head.h is writte without #ifndef, #define #endif, then you must will get an error to stop your working.also, here the use of,

#ifdef
#else
#endif
this condition definition can save your release code size :).what is different between static type and dynamic type.static type: know when program is in compile process.dynamic type: know only in the run process.  For pointer type.
</code></pre></li>
<li><p>宏函数,宏可以实现一个函数的功能，这样可以减少函数调用的消耗。函数中可以有参数，宏的功能也比较强大，远远不止是定义一个常亮那么简单,线面是一个简单的例子。并且宏中也可以调用另一个宏，就像函数调用那样,但是必须保证顺序。</p>
<pre><code>注意使用do-while的格式。这样会比较安全（可以避免在宏后面增加一个；而带来的语法问题）。    
例如下面的代码
#define swap(a , b)                 \
    *(a) = (*(a)) ^ (*(b));         \
    *(b) = (*(a)) ^ (*(b));         \
    *(a) = (*(a)) ^ (*(b));   

#define msort(a , n )               \
do{                                 \
    for(int i = 0; i &lt; n; i++){     \
        for(int j =0 ; j &lt; i ;j++){ \
            if(a[i] &lt; a[j]) {       \
                   swap(a+i , a+j);    \
            }                       \
        }                           \
    }                               \
}while(0)                           
</code></pre></li>
</ol>
<h4 id="C-指针-函数指针"><a href="#C-指针-函数指针" class="headerlink" title="C 指针(函数指针)"></a>C 指针(函数指针)</h4><ol>
<li><code>int (*) p[10]</code> 本质上是一个指针，指向一个有10个元素的数组。指针数组。</li>
<li><code>int * p[10]</code> 本质上是一个数组，数组里面的每一个元素都是一个<code>int*</code>类型的指针。数组指针。</li>
<li>函数指针，函数指针可以作为一个普通的指针，既然它是一个指针，就可以通过参数来传递。下面是作为参数。可以参考下面的例子。</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span> <span class="params">(* funcType)</span> <span class="params">(<span class="keyword">int</span>)</span></span>; <span class="comment">/*定义一个函数指针的类型*/</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span> <span class="params">(<span class="keyword">int</span>)</span></span>;  <span class="comment">/*函数指针*/</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">func_test</span><span class="params">(funcType fp , <span class="keyword">int</span>)</span></span>; <span class="comment">/*用函数指针作为参数*/</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> a)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> a+<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">func_test</span><span class="params">(funcType fp , <span class="keyword">int</span> a)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> fp(a);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> abc = <span class="number">100</span>;</div><div class="line">    <span class="comment">/*定义一个函数指针，指向一个函数。函数名本质上是一个指针常量*/</span></div><div class="line">    funcType hello = func;</div><div class="line">    <span class="keyword">int</span> dd = (*hello)(abc);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"value of variable dd  is %d\n"</span>,dd);</div><div class="line">    abc = func_test(func , abc);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,abc);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="C-中的extern关键字"><a href="#C-中的extern关键字" class="headerlink" title="C 中的extern关键字"></a>C 中的extern关键字</h4><ol>
<li>让变量可以在其他文件中也可以使用。只能对全局变量起作用，不在全局作用域会导致编译报错。本质上是为了多个文件中共享变量，在工程中，可以让工程更好维护。</li>
<li>需要注意的是，c语言中的函数原型本身具有外部链接属性，所以对与函数而言，用不用extern都是一样的。所以呢，对于extern来说，用在变量上可能作用更大一些。在C语言中，extern变量的存在改变了变量的链接属性，用extern关键字修饰的变量其定义将在别处，编译器的变量解析将推迟到链接上。</li>
<li>一般来说，C工程的管理方式是将所有的外部函数定义在一个.h文件中。在需要用到这些函数的C文件中，包含这个.h文件就可以了。但是如果没有用.h 文件的话，这个时候就必须在主文件中用extern申明一下用到的函数了，但是这并不是必须的，没有这个extern也是可以的，所以extern对于函数来说，不是必须的，完全可以忽略，对于函数，作用不大。</li>
<li>函数可以申明多次，编译并不会报错，但是只能定义一次。</li>
</ol>
<p>下面是一个具体的例子:里面函数申明前面的extern关键字都可以没有，函数默认有了这个属性。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><div class="line"><span class="comment">/*** main.c ***/</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"b.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">print_hello</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> TSM = <span class="number">10000</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    print_hello(<span class="string">"hello world"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/*** b.h ***/</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> B_H</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> B_H</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">print_hello</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="comment">/*** b.c ***/</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">extern</span> <span class="keyword">int</span> TSM;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_hello</span><span class="params">(<span class="keyword">char</span> *s)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t%s\n"</span>,s);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,TSM);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="一些语言细节"><a href="#一些语言细节" class="headerlink" title="一些语言细节"></a>一些语言细节</h4><ol>
<li>malloc 和 calloc的区别。  malloc 可以分配内存，但是不做初始化。calloc也是分配内存，但是给你做初始化，新能比malloc差一点。但是在需要初始化的时候，用calloc可以省去memset的函数调用时间，看需求来定。注意malloc和calloc的参数的不同,malloc 只需要一个参数。<code>realloc</code>的使用,比如你给int *a分配了10个空间，现在发现10个不够了，那么你需要realloc以下。realloc的指针必须是没有free的。</li>
<li>使用math.h的时候，在编译的时候需要加上<code>-lm</code> 参数。</li>
<li>c语言的struct关键字，在定义节点的时候都需要带上，这一点和c++不同，需要注意。可以用typedef来简化这一点。typedef可以出现在结构体定义之前。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;C文件的编译过程&quot;&gt;&lt;a href=&quot;#C文件的编译过程&quot; class=&quot;headerlink&quot; title=&quot;C文件的编译过程&quot;&gt;&lt;/a&gt;C文件的编译过程&lt;/h4&gt;&lt;p&gt;编译一个c文件，产生一个可执行文件，这个过程分为四个步骤&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;.c 文
    
    </summary>
    
    
      <category term="c" scheme="https://blog.nofile.cc/tags/c/"/>
    
  </entry>
  
</feed>
